{
  "openapi": "3.0.0",
  "info": {
    "description": "This is Miare Third-Party API, designed to enable registered Miare users to integrate our delivery services into their applications.",
    "version": "2.1.0",
    "title": "Miare",
    "contact": {
      "email": "sazary@miare.ir"
    }
  },
  "tags": [
    {
      "name": "delivery",
      "description": "Delivery related services"
    },
    {
      "name": "events",
      "description": "Realtime webhook events"
    },
    {
      "name": "accounting",
      "description": "Accounting related services"
    },
    {
      "name": "reservation",
      "description": "Driver's reservation services"
    },
    {
      "name": "notifications"
    },
    {
      "name": "Registration"
    }
  ],
  "servers": [
    {
      "url": "https://ws.mia.re/trip-management/third-party-api/v2",
      "description": "3rd Party"
    },
    {
      "url": "https://staging.ws.mia.re/trip-management/third-party-api/v2",
      "description": "3rd Party - Staging"
    },
    {
      "url": "https://www.mia.re/api",
      "description": "Django API"
    },
    {
      "url": "https://www.staging.mia.re/api",
      "description": "Django API - Staging"
    },
    {
      "description": "Go API - staging",
      "url": "https://staging.ws.mia.re"
    },
    {
      "url": "https://staging.ws.mia.re/staff-api",
      "description": "Go Staff API - staging"
    }
  ],
  "components": {
    "securitySchemes": {
      "auth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "Trip": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique ID of this trip",
            "example": "wpeiru0p-qefq-32pf-nvld-hr9er9dfjas2"
          },
          "area": {
            "$ref": "#/components/schemas/Area"
          },
          "state": {
            "type": "string",
            "description": "Current state of this trip",
            "example": "pickup",
            "enum": [
              "assign_queue",
              "pickup",
              "dropoff",
              "delivered",
              "canceled_by_miare",
              "canceled_by_client"
            ]
          },
          "pickup": {
            "$ref": "#/components/schemas/Pickup"
          },
          "courses": {
            "type": "array",
            "description": "All of the different courses at which parts of this trip should be dropped off",
            "xml": {
              "name": "course",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The exact moment at which this trip is created for the first time",
            "example": "2019-04-12T13:58:42+0000"
          },
          "assigned_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time this trip was assigned to its current courier",
            "example": "2019-04-12T13:59:59+0000"
          },
          "picked_up_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the courier picked up the items from pickup location",
            "example": "2019-04-12T14:10:42+0000"
          },
          "courier": {
            "$ref": "#/components/schemas/Courier"
          },
          "test_mode": {
            "type": "boolean",
            "description": "Whether or not this trip was created in test mode",
            "example": false
          }
        },
        "xml": {
          "name": "Trip"
        },
        "x-examples": {}
      },
      "DriverAllocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The id of serialized allocation",
            "example": 3
          },
          "area_name": {
            "type": "string",
            "description": "The name of area related to the allocation",
            "example": "فردوس شرقی"
          },
          "priority": {
            "type": "number",
            "description": "The priority of allocation, the greater value has higher priority",
            "example": 10,
            "enum": [
              10,
              20
            ]
          },
          "starting_date": {
            "type": "string",
            "format": "date",
            "description": "Inclusive date which allocation is valid from",
            "example": "2020-01-19"
          },
          "expired_at": {
            "type": "string",
            "format": "date",
            "description": "Exclusive date which allocation is valid until",
            "example": "2020-01-20",
            "nullable": true
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "description": "The start time of related Interval to the allocation",
            "example": "11:30:00"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "description": "The end time of related Interval to the allocation",
            "example": "11:30:00"
          }
        },
        "xml": {
          "name": "Allocation"
        }
      },
      "Pickup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The human readable name of the pickup",
            "example": "رستوران بزرگمهر"
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number associated with the source which will be used by courier and support staffs in order to contact to pickup if necessary",
            "example": "0212345678"
          },
          "address": {
            "type": "string",
            "description": "The human readable address of the source, preferably down to every necessary detail for a human to find the source quickly",
            "example": "تهران، صادقیه، بلوار آیت الله کاشانی"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "A valid URL which points to an image file which should be the logo of the pickup. This image will be used in both support panel, and courier’s application, so make sure that the URL is both reachable and is configured to allow CORS requests",
            "example": "https://example.com/restaurants/bm_logo.png"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "description": "The time that you expect the courier to arrive at the pickup, so optimally it should be the time package content is ready and packaged",
            "example": "2019-04-12T14:12:00+0000"
          }
        },
        "xml": {
          "name": "Pickup"
        }
      },
      "Course": {
        "type": "object",
        "required": [
          "bill_number",
          "name",
          "phone_number",
          "address"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of this course",
            "example": "wpeiru0p-qefq-32pf-nvld-hr9er9dfjas2"
          },
          "bill_number": {
            "type": "string",
            "description": "An string field left for you to store sort of a human readable bill number in it which will be used as a reference point among our support team, you and the pickup staffs",
            "example": "DEL-119"
          },
          "name": {
            "type": "string",
            "description": "Name of the dropp-off",
            "example": "علی علوی"
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number associated with the drop-off which will be used by courier and support staffs in order to contact to them if necessary",
            "example": "09123456789"
          },
          "address": {
            "type": "string",
            "description": "The human readable drop-off address, preferably down to every necessary detail for a human to find it quickly",
            "example": "هران، خیابان استاد معین، پلاک ۱۲"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "manifest_items": {
            "type": "array",
            "xml": {
              "name": "manifest_item",
              "wrapped": true
            },
            "description": "The contents of the package to be delivered to the drop-off",
            "items": {
              "$ref": "#/components/schemas/ManifestItem"
            }
          },
          "tracking_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of Miare Tracking webpage which can be given to user so he/she can follow the courier in real-time",
            "example": "https://mia.re/t/73c939d1/"
          },
          "dropped_off_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time this course was dropped off by courier",
            "example": "2019-04-12T14:06:42+0000"
          }
        },
        "xml": {
          "name": "Course"
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "example": "35.737004"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": "51.413569"
          }
        },
        "xml": {
          "name": "Location"
        }
      },
      "ManifestItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human readable name of the content which will be verified by courier",
            "example": "پیتزا پپرونی خانواده"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "The quanitiy of the given item",
            "example": 2
          }
        },
        "xml": {
          "name": "ManifestItem"
        }
      },
      "Area": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of area",
            "example": "59"
          },
          "name": {
            "type": "string",
            "description": "Textual name of the area",
            "example": "فردوس شرق"
          }
        },
        "xml": {
          "name": "Area"
        }
      },
      "Courier": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the driver",
            "example": "علی لطفی"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "A photo of the courier",
            "example": "https://files.miare.ir/avatars/gheuIej.jpg"
          }
        },
        "xml": {
          "name": "Courier"
        }
      },
      "Payment": {
        "type": "object",
        "xml": {
          "name": "Payment"
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of this payment",
            "example": 2
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Amount of this payment, in IRT",
            "example": 2000
          },
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which this payment has been submitted",
            "example": "2019-04-12T13:58:42+0000"
          },
          "type": {
            "type": "integer",
            "example": 10,
            "enum": [
              10,
              20,
              30
            ]
          }
        },
        "required": [
          "id",
          "amount",
          "datetime",
          "type"
        ]
      },
      "Order": {
        "type": "object",
        "xml": {
          "name": "Order"
        },
        "x-examples": {
          "example-1": {
            "id": 2,
            "amount": 2000,
            "created_at": "2019-04-12T13:58:42+0000",
            "description": "رزرو شیفت دوشنبه شب",
            "payment": {
              "id": 2,
              "amount": 2000,
              "datetime": "2019-04-12T13:58:42+0000",
              "type": 10
            },
            "items": [
              {
                "date": "2019-08-24",
                "amount": 0,
                "interval_areas": [
                  {
                    "interval": {
                      "id": 0,
                      "start_time": "string",
                      "end_time": "string",
                      "name": "string"
                    },
                    "area": {
                      "id": 0,
                      "name": "string"
                    }
                  }
                ]
              }
            ],
            "expired_at": null,
            "payment_options": [
              {
                "type": 10,
                "amount": 3000
              },
              {
                "type": 30,
                "amount": 4000
              }
            ]
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier",
            "example": 2
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Amount of this order, in IRT",
            "example": 2000,
            "deprecated": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which this order has been created",
            "example": "2019-04-12T13:58:42+0000"
          },
          "description": {
            "type": "string",
            "description": "Human readable description of the order",
            "example": "رزرو شیفت دوشنبه شب"
          },
          "payment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Payment"
              },
              {
                "type": "null"
              }
            ]
          },
          "items": {
            "type": "array",
            "description": "Items of this order",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "expired_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "payment_options": {
            "description": "if this order is expired, it wouldn't have any payment_options. otherwise we would offer some ways, each with it's own amount.",
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "integer",
                      "enum": [
                        10,
                        30
                      ],
                      "description": "currently it's only type of payment, which is one of 10 (actual) or 30, (credit) ."
                    },
                    "amount": {
                      "type": "integer",
                      "example": 3000,
                      "minimum": 0,
                      "description": "amount in tomans"
                    }
                  },
                  "required": [
                    "type",
                    "amount"
                  ]
                }
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "payment_options"
        ]
      },
      "Event": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "The event being reported",
            "enum": [
              "added",
              "assigned",
              "course_added",
              "course_deleted",
              "picked_up",
              "course_dropped_off",
              "delivered",
              "canceled_by_client",
              "canceled_by_miare"
            ]
          },
          "trip": {
            "$ref": "#/components/schemas/Trip"
          }
        },
        "xml": {
          "name": "Event"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Constant error code",
            "example": "trip_not_found"
          },
          "detail": {
            "type": "string",
            "description": "Human readable explanation of the error",
            "example": "Could not find trip with id \"wrong_id\""
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "description": "Represents the problem choosable for Issue",
        "type": "object",
        "x-examples": {
          "example": {
            "id": 1,
            "title": "آدرس را نمی‌شناسم",
            "description_required": false,
            "category": {
              "id": 1,
              "title": "عدم امکان تکمیل سفر",
              "auto_revoke_on_create": false
            }
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/ProblemCategory"
          },
          "description_required": {
            "type": "boolean"
          }
        }
      },
      "ProblemCategory": {
        "title": "ProblemCategory",
        "type": "object",
        "x-examples": {
          "example": {
            "id": 1,
            "title": "عدم امکان تکمیل سفر",
            "auto_revoke_on_create": false
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "auto_revoke_on_create": {
            "type": "boolean"
          }
        }
      },
      "DriverPlan": {
        "title": "DriverPlan",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "assign_weight": {
            "type": "number"
          },
          "type": {
            "type": "integer"
          },
          "intervals": {
            "type": "array",
            "items": {}
          },
          "max_acceptable_absence_hours": {
            "type": "integer"
          },
          "min_acceptable_courses_count": {
            "type": "integer"
          },
          "reservable": {
            "type": "boolean",
            "description": "Determins if the plan has the same type of Platinum"
          },
          "max_allowed_intervals_per_day": {
            "type": "integer"
          }
        }
      },
      "Notification": {
        "title": "Notification",
        "type": "object",
        "x-examples": {
          "message-example": {
            "message_type": "message",
            "payload": {
              "id": 1,
              "title": "مازاد درآمد",
              "message": "تبریک! شما مشمول مازاد درآمد شدید",
              "image": null
            }
          },
          "ticket-example": {
            "message_type": "ticket",
            "payload": {
              "id": 2,
              "title": "پاسخ برای تیکت",
              "message": "شما یک پیام خوانده نشده دارید، لطفا در اولین فرصت بخش تیکت‌ها در برنامه «میاره» را مشاهده نمائید.",
              "image": null
            }
          },
          "bug-report-example": {
            "message_type": "bug_report",
            "payload": {
              "id": 3,
              "title": "درخواست ارسال گزارش از پشتیبانی",
              "message": "نمونه گزارش احتمالی اضافه شده توسط پشتیبانی",
              "image": null
            }
          }
        },
        "description": "Represents the data format of serialized message over GCM",
        "properties": {
          "message_type": {
            "type": "string",
            "enum": [
              "message",
              "ticket",
              "bug_report"
            ]
          },
          "payload": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uri"
              }
            }
          }
        }
      },
      "DriverArea": {
        "title": "DriverArea",
        "type": "object",
        "x-examples": {
          "example": {
            "type": "Feature",
            "geometry": {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    51.410995423278784,
                    35.75178947678033
                  ],
                  [
                    51.41437601058966,
                    35.75236448783447
                  ],
                  [
                    51.41608289947508,
                    35.75241707766311
                  ],
                  [
                    51.41783270370476,
                    35.75171215711329
                  ],
                  [
                    51.41996874603275,
                    35.75069377287796
                  ],
                  [
                    51.41975,
                    35.75898
                  ],
                  [
                    51.4213585423279,
                    35.764430621902875
                  ],
                  [
                    51.421853967914565,
                    35.76584161592507
                  ],
                  [
                    51.42770366539005,
                    35.775432270258094
                  ],
                  [
                    51.427215302963305,
                    35.77935129337725
                  ],
                  [
                    51.4220116170884,
                    35.785208827223016
                  ],
                  [
                    51.41961352184293,
                    35.78923397961277
                  ],
                  [
                    51.415976045646616,
                    35.79079819176944
                  ],
                  [
                    51.410919680881534,
                    35.779561982767575
                  ],
                  [
                    51.41210702117913,
                    35.77346182827735
                  ],
                  [
                    51.40970771163936,
                    35.76051262997255
                  ],
                  [
                    51.40944746378896,
                    35.757159687273045
                  ],
                  [
                    51.410136661376974,
                    35.7559546866528
                  ],
                  [
                    51.41051874603269,
                    35.75426535475744
                  ],
                  [
                    51.410995423278784,
                    35.75178947678033
                  ]
                ]
              ]
            },
            "properties": {
              "id": 17,
              "name": "جردن",
              "manual_assign_enabled": false
            }
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Feature"
            ],
            "example": "Feature"
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "manual_assign_enabled": {
                "type": "boolean"
              }
            }
          },
          "geometry": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Polygon"
                ],
                "example": "Polygon"
              },
              "coordinates": {
                "type": "array",
                "minItems": 1,
                "maxItems": 1,
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "items": {
                      "type": "number",
                      "exclusiveMinimum": false,
                      "exclusiveMaximum": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TripInDailyKPI": {
        "title": "TripInDailyKPI",
        "type": "object",
        "x-tags": [
          "accounting"
        ],
        "x-examples": {
          "example": {
            "request_datetime": "2020-01-15T11:45:23.484003+03:30",
            "assign_datetime": "2020-01-15T11:45:53.264385+03:30",
            "id": 1724657,
            "courses": [
              {
                "id": 2630921,
                "end_datetime": "2020-01-15T12:03:11+03:30",
                "radial_end_to_end_distance": 0.009783316341434355,
                "is_long": false
              }
            ],
            "course_bonuses": [],
            "source_title": "فودکورت لوکال‌هاست",
            "is_round_trip": true,
            "end_datetime": "2020-01-15T12:03:21+03:30",
            "raw_salary": 15500
          }
        },
        "description": "",
        "properties": {
          "request_datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-15T11:45:23.484003+03:30"
          },
          "assign_datetim": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-15T11:45:23.484003+03:30"
          },
          "courses": {
            "type": "array",
            "items": {}
          },
          "id": {
            "type": "integer",
            "example": 1724657
          },
          "course_bonuses": {
            "type": "array",
            "items": {}
          },
          "source_title": {
            "type": "string",
            "example": "فودکورت لوکال‌هاست"
          },
          "is_round_trip": {
            "type": "boolean"
          },
          "end_datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-15T12:03:21+03:30"
          },
          "raw_salary": {
            "type": "integer"
          }
        }
      },
      "Absence": {
        "title": "Absence",
        "type": "object",
        "x-tags": [
          "accounting",
          "delivery"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "start_datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-15T16:01:48.265866+03:30"
          },
          "end_datetime": {
            "type": "string",
            "example": "2020-01-15T16:01:48.265866+03:30"
          },
          "status": {
            "type": "boolean"
          },
          "tag": {
            "type": "integer",
            "enum": [
              0,
              10,
              20
            ],
            "example": 10
          },
          "comment": {
            "type": "string"
          }
        },
        "x-examples": {
          "example": {
            "id": 12838542,
            "start_datetime": "2020-01-15T16:01:48.265866+03:30",
            "end_datetime": "2020-01-15T17:30:00+03:30",
            "status": false,
            "tag": 20,
            "comment": ""
          }
        }
      },
      "DriverZone": {
        "title": "DriverZone",
        "type": "object",
        "x-examples": {
          "example": {}
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "explanation": {
            "type": "string"
          }
        }
      },
      "DriverActivityZone": {
        "title": "DriverActivityZone",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "driver": {
            "$ref": "#/components/schemas/Driver"
          },
          "zone": {
            "$ref": "#/components/schemas/DriverZone"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Driver": {
        "title": "Driver",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "$ref": ""
          },
          "national_id": {
            "type": "integer"
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "available": {
            "type": "boolean"
          },
          "present_at_shift_start": {
            "type": "boolean"
          },
          "busy": {
            "type": "boolean"
          },
          "phone": {
            "type": "integer"
          },
          "quit_date": {
            "type": "string",
            "format": "date"
          },
          "quit_type": {
            "type": "integer"
          },
          "quit_reason": {
            "type": "string"
          },
          "rating": {
            "type": [
              "string",
              "integer"
            ]
          },
          "is_suspended": {
            "type": "boolean"
          },
          "suspension_date": {
            "type": "string",
            "format": "date"
          },
          "tags": {
            "$ref": "#/components/schemas/DriverTag"
          }
        }
      },
      "DriverTag": {
        "title": "DriverTag",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "OrderItem": {
        "title": "OrderItem",
        "type": "object",
        "x-examples": {},
        "description": "Describes each row of an Order object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "integer"
          },
          "interval_areas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "interval": {
                  "$ref": "#/components/schemas/Interval"
                },
                "area": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DailyKPI": {
        "title": "DailyKPI",
        "type": "object",
        "properties": {
          "absence_seconds": {
            "type": "integer"
          },
          "absences": {
            "type": "array",
            "items": {}
          },
          "bonus_courses_count": {
            "type": "integer"
          },
          "courses_count": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "long_courses_count": {
            "type": "integer"
          },
          "round_trips_count": {
            "type": "integer"
          },
          "trips_count": {
            "type": "integer"
          }
        }
      },
      "Interval": {
        "title": "Interval",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "start_time": {
            "type": "string",
            "format": "time"
          },
          "end_time": {
            "type": "string",
            "format": "time"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "is_staff": {
            "type": "boolean"
          },
          "user_name": {
            "type": "string"
          }
        },
        "x-examples": {}
      },
      "Issue": {
        "title": "Issue",
        "type": "object",
        "description": "",
        "x-examples": {
          "example": {
            "description": "پاره‌ای از توضیحات",
            "driver_id": 5,
            "id": 123,
            "problem": null,
            "reported_at": "2020-07-22T13:37:51+0430",
            "reporter_type": "client",
            "reported_by": {
              "id": 6067,
              "user_name": "bbbccc",
              "is_staff": true,
              "first_name": "Jack",
              "last_name": "Jonez"
            },
            "resolved_at": null,
            "trip_id": 1769145,
            "picked_by": {
              "id": 6067,
              "user_name": "a1b2c3",
              "is_staff": true,
              "first_name": "John",
              "last_name": "Smith"
            }
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "driver_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "trip_id": {
            "type": "integer"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "problem": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              }
            }
          },
          "reported_at": {
            "type": "string"
          },
          "resolved_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "picked_by": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "reporter_type": {
            "type": "string",
            "enum": [
              "client",
              "driver",
              "auto",
              "staff"
            ]
          },
          "reported_by": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        }
      },
      "StaticContent": {
        "title": "StaticContent",
        "type": "object",
        "description": "Represents a model keeping static contents on the file server",
        "x-examples": {
          "example": {
            "id": 1,
            "name": "v1",
            "file_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B1.JPG",
            "seen": false,
            "description": "Lorem Ipsum",
            "thumbnail_url": "https://img.com/sample.JPG"
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "The name which the staff has entered while saving the record"
          },
          "file_url": {
            "type": "string",
            "format": "uri"
          },
          "seen": {
            "type": "boolean"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "thumbnail_url": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Reward": {
        "title": "BalanceModification",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "amount": {
            "type": "integer",
            "description": "Negative for Punishments, Positive for Rewards"
          },
          "reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/BalanceModificationType"
          },
          "course_id": {
            "type": [
              "integer",
              "null"
            ]
          }
        }
      },
      "BalanceModificationType": {
        "title": "BalanceModificationType",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Referral": {
        "title": "Referral",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the referrer"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the referrer"
          },
          "driver": {
            "type": "object",
            "description": "The driver who is referred",
            "properties": {
              "id": {
                "type": "integer"
              },
              "avatar": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "is_suspended": {
                "type": "boolean"
              },
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "payment_amount": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Debt": {
        "title": "DebtItem",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "paid": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "dabt_info": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "total_amount": {
                "type": "integer"
              },
              "total_installments": {
                "type": "integer"
              },
              "payment_start_date": {
                "type": "string",
                "format": "date"
              },
              "return_at_quit": {
                "type": "boolean"
              },
              "type": {
                "$ref": "#/components/schemas/BalanceModificationType"
              }
            }
          }
        }
      },
      "NewIssueRequestBody": {
        "title": "NewIssueRequestBody",
        "type": "object",
        "properties": {
          "trip_id": {
            "type": "integer"
          },
          "problem_id": {
            "type": "integer"
          },
          "description": {
            "type": "string",
            "description": "Required if the problem is null orr requires description",
            "maxLength": 200
          }
        },
        "required": [
          "trip_id"
        ]
      },
      "Customer-Feedback": {
        "title": "Feedback",
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "course": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "customer": {
            "type": "integer"
          },
          "driver": {
            "type": "integer"
          },
          "problem": {
            "type": "string"
          },
          "rating": {
            "type": "integer"
          }
        }
      },
      "Package_info": {
        "title": "Package_info",
        "type": "object",
        "properties": {
          "bill_number": {
            "type": "integer"
          },
          "confirmed": {
            "type": "boolean"
          },
          "course_id": {
            "type": "integer"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "destination_text": {
            "type": "string"
          },
          "driver": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "paid_back": {
            "type": "boolean"
          },
          "payment_type": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          }
        }
      },
      "Customer": {
        "title": "Customer",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "integer"
          }
        }
      },
      "Ticket": {
        "title": "Ticket",
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string"
          },
          "state": {
            "type": "integer"
          }
        }
      },
      "RestaurantFeedback": {
        "type": "object",
        "title": "RestaurantFeedback",
        "properties": {
          "id": {
            "type": "integer"
          },
          "comment": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "driver": {
            "type": "integer"
          },
          "problems": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rating": {
            "type": "integer"
          },
          "restaurant": {
            "type": "integer"
          },
          "trip": {
            "type": "integer"
          }
        }
      },
      "PriceDetails": {
        "title": "PriceDetails",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "price_delta": {
            "type": "integer"
          },
          "regulation": {
            "type": "string"
          }
        },
        "x-examples": {
          "example-1": {
            "id": 0,
            "price_delta": 5000,
            "regulation": "base_cost"
          }
        }
      },
      "Published-Course": {
        "title": "PublishedCourse",
        "type": "object",
        "x-tags": [
          "delivery"
        ],
        "x-examples": {
          "example-1": {
            "course_financials_id": 0,
            "destination": {
              "latitude": 35.724573,
              "longitude": 51.328303
            },
            "destination_text": "اباذر، بلوار آیت الله کاشانی",
            "distance": 0.03017905324450567,
            "end_datetime": "2020-09-07T14:34:00+0430",
            "feedback": null,
            "id": 2699717,
            "meta": null,
            "next_course_id": 0,
            "package_info": null,
            "paid_at_destination": false,
            "price": null,
            "price_details": [],
            "requested_destination": null,
            "requested_destination_address": null,
            "reported_as_long": false,
            "url": "/courses/2699717/"
          }
        },
        "properties": {
          "course_financials_id": {},
          "destination": {
            "type": "object"
          },
          "destination_text": {},
          "distance": {},
          "end_datetime": {},
          "feedback": {},
          "id": {},
          "meta": {},
          "next_course_id": {},
          "package_info": {},
          "paid_at_destination": {},
          "price": {},
          "price_details": {},
          "requested_destination": {},
          "requested_destination_address": {},
          "reported_as_long": {
            "type": "boolean"
          },
          "url": {}
        }
      },
      "Client": {
        "title": "Client",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "area_id": {
            "type": "integer"
          },
          "blocked": {
            "type": "boolean"
          },
          "concurrencies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "start_time": {
                  "type": "string",
                  "format": "time"
                },
                "end_time": {
                  "type": "string",
                  "format": "time"
                },
                "area": {
                  "type": "integer",
                  "description": "The areaID of the concurrency, zero for multisource clients"
                },
                "limit": {
                  "type": "integer"
                }
              }
            }
          },
          "id": {
            "type": "integer"
          },
          "is_fake": {
            "type": "boolean"
          },
          "location": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Location"
              },
              {
                "type": "null",
                "properties": {}
              }
            ]
          },
          "logo": {
            "type": "string",
            "description": "Empty string returned instead of null"
          },
          "multi_source": {
            "type": "boolean"
          },
          "payment_registration": {
            "type": [
              "object",
              "null"
            ]
          },
          "phone": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "start_working_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "suitable_for_newbies": {
            "type": "boolean"
          }
        }
      },
      "UpdateLocationPayload": {
        "title": "UpdateLocationPayload",
        "type": "object",
        "description": "",
        "x-examples": {
          "example": {
            "driver_id": 5,
            "datetime": "2020-09-01T10:32:49+0430",
            "location": {
              "latitude": 29.637324,
              "longitude": 52.45684
            },
            "out_of_area": true
          }
        },
        "properties": {
          "driver_id": {
            "type": "integer"
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "out_of_area": {
            "type": "boolean"
          }
        }
      },
      "UpdateLocationMessage": {
        "title": "UpdateLocationMessage",
        "type": "object",
        "description": "Note that the payload is converted to string",
        "properties": {
          "msg_type": {
            "type": "string",
            "enum": [
              "update_location"
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/UpdateLocationPayload"
          }
        },
        "x-examples": {
          "example": {
            "msg_type": "update_location",
            "payload": "{\"driver_id\": 5,\"datetime\": \"2019-08-24T14:15:22Z\", \"location\": {\"latitude\": 35.737004, \"longitude\": 51.413569}, \"out_of_area\": true}"
          }
        }
      },
      "UpdateDriverMessage": {
        "title": "UpdateDriverMessage",
        "type": "object",
        "description": "Note that the payload is converted to string as in example",
        "properties": {
          "msg_type": {
            "type": "string",
            "enum": [
              "driver"
            ]
          },
          "payload": {
            "$ref": "#/components/schemas/DriverOnWebsocket"
          }
        },
        "x-examples": {
          "example": {
            "msg_type": "driver",
            "payload": "{\"available\": true,\"avatar\": \"https://*thumbor_domain/unsafe/200x200/smart/https://miare-staging.files.miare.ir/media/IMG_20160531_210617.jpg\",\"busy\": true,\"id\": 5,\"is_suspended\": false,\"phone\": \"09991234567\",\"rest\": null,\"url\": \"/drivers/5/\",\"user\": {\"first_name\": \"آقای\",\"id\": 4,\"is_staff\": true,\"last_name\": \"راننده\",\"user_name\": \"driver23213\"}}"
          }
        }
      },
      "DriverOnWebsocket": {
        "title": "DriverOnWebsocket",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "available": {
            "type": "boolean"
          },
          "busy": {
            "type": "boolean"
          },
          "avatar": {
            "type": "string"
          },
          "is_suspended": {
            "type": "boolean"
          },
          "rest": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null",
                "properties": {}
              }
            ]
          },
          "url": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "ClientPayment": {
        "title": "ClientPayment",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "amount": {
            "type": "integer",
            "exclusiveMaximum": true,
            "maximum": 0
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TripPriceChanges": {
        "title": "TripPriceChanges",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "price_delta": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "driver_tag": {
            "type": "integer"
          },
          "trip_financials_id": {
            "type": "integer"
          },
          "trip_datetime": {
            "type": "integer"
          }
        }
      },
      "Withdrawals": {
        "title": "Withdrawal",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "ConcurrencyCost": {
        "title": "ConcurrencyCost",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "integer"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ClientMiscExpense": {
        "title": "ClientMiscExpense",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "integer"
          }
        }
      },
      "RegistrationPersonalInfo": {
        "description": "",
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 1
          },
          "last_name": {
            "type": "string",
            "minLength": 1
          },
          "fathers_name": {
            "type": "string",
            "minLength": 1
          },
          "has_citizenship": {
            "type": "boolean"
          },
          "serial_id": {
            "type": "string",
            "minLength": 1
          },
          "citizen_number": {
            "type": "string",
            "minLength": 1
          },
          "passport_number": {
            "type": "string",
            "minLength": 1
          },
          "birth_date": {
            "type": "string",
            "minLength": 1
          },
          "review": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/RegistrationReview"
              }
            ]
          },
          "approved_by_recruiter": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "fathers_name",
          "has_citizenship",
          "serial_id",
          "birth_date"
        ]
      },
      "RegistrationContactInfo": {
        "description": "",
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "minLength": 1
          },
          "review": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegistrationReview"
              },
              {
                "type": "null"
              }
            ]
          },
          "approved_by_recruiter": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "address"
        ]
      },
      "RegistrationBikeInfo": {
        "title": "RegistrationBikeInfo",
        "type": "object",
        "properties": {
          "plate_number": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8
          },
          "bike_model": {
            "type": "string"
          },
          "review": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/RegistrationReview"
              }
            ]
          },
          "approved_by_recruiter": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "plate_number",
          "bike_model"
        ]
      },
      "RegistrationExperienceInfo": {
        "title": "RegistrationExperienceInfo",
        "type": "object",
        "properties": {
          "reference_type": {
            "type": "string"
          },
          "has_experience_as_driver": {
            "type": "boolean"
          },
          "has_experience_in_snapp": {
            "type": "boolean"
          },
          "has_experience_in_alopeik": {
            "type": "boolean"
          },
          "review": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/RegistrationReview"
              }
            ]
          },
          "approved_by_recruiter": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "status": {
            "type": "string"
          }
        }
      },
      "RegistrationReview": {
        "title": "RegistrationReview",
        "type": "object",
        "properties": {
          "is_approved": {
            "type": "boolean"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "IdentityDoc": {
        "description": "",
        "type": "object",
        "title": "IdentityDocs",
        "properties": {
          "driving_license_url": {
            "type": [
              "null",
              "string"
            ]
          },
          "review": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/RegistrationReview"
              }
            ]
          },
          "approved_by_recruiter": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "status": {
            "type": "string"
          }
        }
      },
      "RegistrationOverview": {
        "title": "RegistrationOverview",
        "type": "object",
        "properties": {
          "driver_id": {
            "type": "integer"
          },
          "personal_info_status": {
            "type": "string",
            "enum": [
              "no_data",
              "submitted",
              "approved",
              "rejected"
            ]
          },
          "bike_info_status": {
            "type": "string",
            "enum": [
              "no_data",
              "submitted",
              "approved",
              "rejected"
            ]
          },
          "contact_info_status": {
            "type": "string",
            "enum": [
              "no_data",
              "submitted",
              "approved",
              "rejected"
            ]
          },
          "identity_docs_status": {
            "type": "string",
            "enum": [
              "no_data",
              "submitted",
              "approved",
              "rejected"
            ]
          },
          "experience_info_status": {
            "type": "string",
            "enum": [
              "no_data",
              "submitted",
              "approved",
              "rejected"
            ]
          },
          "complementary_info_status": {
            "type": "string",
            "enum": [
              "no_date",
              "submitted",
              "approved",
              "rejected"
            ]
          },
          "phone": {
            "type": "string"
          }
        },
        "description": ""
      },
      "DriverComplementaryInfoForRead": {
        "title": "DriverComplementaryInfoForRead",
        "type": "object",
        "properties": {
          "national_card_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "avatar_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "promissory_serial": {
            "type": [
              "string",
              "null"
            ]
          },
          "box_payment_type": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "cash",
              "shetab"
            ]
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ConditionalReward": {
        "title": "ConditionalReward",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "ledger": {
            "$ref": "#/components/schemas/TransactionLedger"
          },
          "reward": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "threshold": {
            "type": "integer",
            "description": "in CourseConditionalReward is min_acceptable_courses and in PresenceConditionalReward and GuaranteedIncomeReward is min_acceptable_presence"
          }
        }
      },
      "TransactionLedger": {
        "title": "TransactionLedger",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "DriverDeviceReport": {
        "title": "DriverDeviceReport",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "driver_id": {
            "type": "integer"
          },
          "report_file": {
            "type": "string",
            "description": "Address of the stored report file"
          },
          "datetime_added": {
            "type": "string"
          }
        },
        "description": "This is for storing/monitoring courier's devices bug report."
      },
      "PresenceIntervalItem": {
        "title": "PresenceIntervalItem",
        "type": "object",
        "x-examples": {},
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "start_time": {
            "type": "string",
            "format": "time"
          },
          "end_time": {
            "type": "string",
            "format": "time"
          },
          "present": {
            "type": "boolean"
          },
          "presence_duration": {
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {
      "EventBody": {
        "description": "Event happened for a trip",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/trips/": {
      "post": {
        "tags": [
          "delivery"
        ],
        "summary": "Creates a new trip and puts it in the assign queue",
        "description": "Note that trip creation will fail if you don't have enough concurrency limit in the area of the pickup location of the given trip.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pickup": {
                    "$ref": "#/components/schemas/Pickup"
                  },
                  "courses": {
                    "type": "array",
                    "xml": {
                      "name": "course",
                      "wrapped": true
                    },
                    "items": {
                      "$ref": "#/components/schemas/Course"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in trip creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "parse_error",
                        "invalid_request_body",
                        "concurrency_limit"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/trips/{trip_id}/cancel/": {
      "post": {
        "tags": [
          "delivery"
        ],
        "summary": "Cancels the given trip",
        "description": "Note that a trip CANNOT be cancelled when it has passed 30 seconds since we’ve assigned it to a courier or the courier has already arrived at the source. In special cases which you still need to cancel the trip, please contact our support.",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "description": "The ID of the trip to be cancelled",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully cancelled trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in trip cancellation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "parse_error",
                        "invalid_request_body",
                        "canceling_ended_trip",
                        "invalid_state_change",
                        "canceling_arrived_trip",
                        "canceling_after_deadline"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/trips/{trip_id}/courses/": {
      "post": {
        "tags": [
          "delivery"
        ],
        "summary": "Add a course to the given trip",
        "description": "Note that you cannot add a course to an already picked up trip.",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "description": "The ID of the trip to add a course to",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bill_number",
                  "name",
                  "phone_number",
                  "address"
                ],
                "properties": {
                  "bill_number": {
                    "type": "string",
                    "description": "An string field left for you to store sort of a human readable bill number in it which will be used as a reference point among our support team, you and the pickup staffs",
                    "example": "DEL-119"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the dropp-off",
                    "example": "علی علوی"
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "The phone number associated with the drop-off which will be used by courier and support staffs in order to contact to them if necessary",
                    "example": "09123456789"
                  },
                  "address": {
                    "type": "string",
                    "description": "The human readable drop-off address, preferably down to every necessary detail for a human to find it quickly",
                    "example": "هران، خیابان استاد معین، پلاک ۱۲"
                  },
                  "location": {
                    "$ref": "#/components/schemas/Location"
                  },
                  "manifest_items": {
                    "type": "array",
                    "xml": {
                      "name": "manifest_item",
                      "wrapped": true
                    },
                    "description": "The contents of the package to be delivered to the drop-off",
                    "items": {
                      "$ref": "#/components/schemas/ManifestItem"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added a course to the trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in adding the course",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "parse_error",
                        "invalid_request_body"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/courses/{course_id}/": {
      "delete": {
        "tags": [
          "delivery"
        ],
        "summary": "Removes the given course from its trip",
        "description": "Note you cannot remove an alreay picked up course.",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "description": "The ID of the course to be removed",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the course",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in coures removal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "parse_error",
                        "invalid_request_body"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscribe/": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Callbacks made by our server",
        "description": "There are different callbacks which will be made in different lifetime stages of a trip. All of them will be sent to the webhook address you’ve provided to the technical team. All of them will contain credential token as a HTTP header as described in the Authentication section and a `X-Miare-API-Version` header indicating the version of API in which the Event’s format will be.",
        "responses": {
          "default": {
            "description": "This is just a placeholder for events"
          }
        },
        "callbacks": {
          "event": {
            "your_webhook_url": {
              "post": {
                "requestBody": {
                  "$ref": "#/components/requestBodies/EventBody"
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/drivers/current-allocations/": {
      "get": {
        "tags": [
          "accounting"
        ],
        "summary": "Fetch current requester allocations",
        "description": "This endpoint is implemented for drivers to see their active allocations within last and next 29 minutes",
        "servers": [
          {
            "url": "https://www.staging.mia.re"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched current allocations of driver",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DriverAllocation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/accounting/drivers/week-allocations/": {
      "get": {
        "tags": [
          "accounting"
        ],
        "summary": "Fetch current week requester allocations",
        "description": "This endpoint is implemented for drivers to see their allocations, active during current week",
        "servers": [
          {
            "url": "https://www.staging.mia.re"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched current allocations of driver",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DriverAllocation"
                  }
                },
                "examples": {}
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/accounting/drivers/upcoming-allocation/": {
      "get": {
        "tags": [
          "accounting"
        ],
        "summary": "Fetch first upcoming or ongoing allocation of requester driver",
        "description": "This endpoint is implemented for drivers to see their current or the first next allocation.",
        "servers": [
          {
            "url": "https://www.staging.mia.re"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched first upcoming allocation of driver",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DriverAllocation"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/ws/drivers/": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Documented events which may occure in a driver websocket connection",
        "description": "These are only the events related to closing connecitopn of driver. ",
        "responses": {
          "default": {
            "description": ""
          },
          "x-4000": {
            "description": "Driver connection closes with this code when it is recognized as duplicate connection after auth message received."
          },
          "x-4005": {
            "description": "Driver connection closes with this code when the driver's allocation is ended."
          },
          "x-4010": {
            "description": "Driver connection closes with this code when the newly authenticated driver has no active allocation."
          },
          "x-4015": {
            "description": "Driver connection closes with this code when gets suspended."
          }
        }
      }
    },
    "/reservation/orders/": {
      "get": {
        "tags": [
          "reservation"
        ],
        "summary": "Orders that have been placed to reserve shifts",
        "description": "These orders are all of orders that this driver have placed, whether they've been paid or not.",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "successful",
                "pending"
              ]
            },
            "required": true,
            "description": "Which type of orders do we want to fetch"
          },
          {
            "in": "query",
            "name": "from_date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Only fetch orders from this date"
          },
          {
            "in": "query",
            "name": "to_date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Only fetch orders until this date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched all orders of driver with specified status and in specified date range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "examples": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new order",
        "operationId": "post-reservation-orders",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request (Validation error occures on request body)"
          },
          "403": {
            "description": "Forbidden (Requesting intervals are full of capacity)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unset_zone",
                        "forbidden_area",
                        "duplicate_date_interval",
                        "pending_order"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict (Requesting to create more than allowed intervals per day)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "detail": "Given intervals are more than set in driver plan",
                      "code": "interval_excess"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create an order with its items",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date"
                    },
                    "interval_id": {
                      "type": "integer"
                    },
                    "area_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "examples": {
                "example": {
                  "value": [
                    {
                      "date": "2020-01-01",
                      "interval_id": 1,
                      "area_id": 1
                    },
                    {
                      "date": "2020-01-01",
                      "interval_id": 2,
                      "area_id": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "reservation"
        ]
      }
    },
    "/reservation/payment/initialize/": {
      "post": {
        "tags": [
          "reservation"
        ],
        "summary": "Initialize a payment",
        "description": "Call this endpoint to initialize an online payment for reservation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_id": {
                    "type": "integer",
                    "description": "ID of the order that we want to pay for it",
                    "example": 2
                  },
                  "type": {
                    "type": "integer",
                    "description": "we won't make it required so that  api stays backward compatible. it's default is debit",
                    "example": 10,
                    "enum": [
                      10,
                      30
                    ]
                  }
                },
                "required": [
                  "order_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully initiate an online payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "http_method",
                    "url"
                  ],
                  "properties": {
                    "http_method": {
                      "type": "string",
                      "enum": [
                        "GET",
                        "POST"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URL that user should be redirected to",
                      "example": "https://sep.shaparak.ir/MobilePG/MobilePayment"
                    },
                    "body": {
                      "type": "object",
                      "additionalProperties": true,
                      "description": "The content of body that PSP expects. This will only be used in POST methods",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in initiating the payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "already_paid",
                        "expired_order",
                        "invalid_payment_type"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "A runtime error has occured, either from Miare's side or PSP's side.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "no_provider_available",
                        "no_profile"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tracking/problems/": {
      "get": {
        "summary": "Problems",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Problem"
                  }
                },
                "examples": {
                  "example": {
                    "value": [
                      {
                        "id": 1,
                        "title": "آدرس را نمی‌شناسم",
                        "description_required": true,
                        "category": {
                          "id": 1,
                          "title": "عدم امکان تکمیل سفر",
                          "auto_revoke_on_create": true
                        }
                      },
                      {
                        "id": 2,
                        "title": "موتورم خراب شده است یا بنزین ندارم",
                        "description_required": true,
                        "category": {
                          "id": 1,
                          "title": "عدم امکان تکمیل سفر",
                          "auto_revoke_on_create": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Invalid `type` given)"
          }
        },
        "operationId": "get-api-tracking-problems",
        "description": "Returns unarchived problems exposed to Drivers",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "driver",
              "enum": [
                "driver",
                "client",
                "staff"
              ]
            },
            "in": "query",
            "name": "type"
          }
        ]
      },
      "parameters": []
    },
    "/accounting/drivers/trip-salary/{trip_id}/": {
      "get": {
        "summary": "Trip Salary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "courses_salary": {
                      "type": "number"
                    },
                    "extra_salary_items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number"
                          },
                          "reason": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "courses_count": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "courses_salary": 10000,
                      "courses_count": 3,
                      "extra_salary_items": [
                        {
                          "amount": 5000,
                          "reason": "شرایط برفی"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "When driver doesn't own the trip or his plan is not reservable"
          }
        },
        "operationId": "get-accounting-trip-salary",
        "description": "Returns info about the salary of a trip for drivers",
        "tags": [
          "accounting"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "trip_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/trip-management/driver-api/refusings/": {
      "get": {
        "summary": "Today Refusings Count",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "count"
                  ]
                },
                "examples": {
                  "example": {
                    "value": {
                      "count": 2
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-tracking-drivers-refusings",
        "description": "Return number of refusing from driver which has happened today"
      },
      "parameters": []
    },
    "/area/driver-areas/": {
      "get": {
        "summary": "Driver Areas",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "FeatureCollection"
                      ],
                      "example": "FeatureCollection"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DriverArea"
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "type": "FeatureCollection",
                      "features": [
                        {
                          "type": "Feature",
                          "geometry": {
                            "type": "Polygon",
                            "coordinates": [
                              [
                                [
                                  51.400484319372595,
                                  35.77711998973699
                                ],
                                [
                                  51.402285798950174,
                                  35.77715689235952
                                ],
                                [
                                  51.409926283111645,
                                  35.77201786907895
                                ],
                                [
                                  51.39114434603266,
                                  35.774689473198926
                                ]
                              ]
                            ]
                          },
                          "properties": {
                            "id": 1,
                            "name": "شیخ بهایی",
                            "manual_assign_enabled": true
                          }
                        },
                        {
                          "type": "Feature",
                          "geometry": {
                            "type": "Polygon",
                            "coordinates": [
                              [
                                [
                                  51.37682978902819,
                                  35.790869849127894
                                ],
                                [
                                  51.365755603073445,
                                  35.786687126523816
                                ],
                                [
                                  51.36732868769171,
                                  35.78070592083067
                                ]
                              ]
                            ]
                          },
                          "properties": {
                            "id": 12,
                            "name": "سعادت آباد جدید",
                            "manual_assign_enabled": false
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-area-driver-areas"
      },
      "parameters": []
    },
    "/accounting/drivers/daily-kpi/": {
      "get": {
        "summary": "Daily KPI",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bonus_courses_count": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "long_courses_count": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "courses_count": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "round_trips_count": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "absences": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Absence"
                      }
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "example": "2020-01-15"
                    },
                    "absence_seconds": {
                      "type": "number",
                      "example": 5291.734134,
                      "minimum": 0
                    },
                    "trips": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TripInDailyKPI"
                      }
                    },
                    "course_bonuses": {
                      "type": "array",
                      "items": {}
                    },
                    "trips_count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "bonus_courses_count": 0,
                      "long_courses_count": 1,
                      "courses_count": 10,
                      "round_trips_count": 6,
                      "absences": [
                        {
                          "id": 12838542,
                          "start_datetime": "2020-01-15T16:01:48.265866+03:30",
                          "end_datetime": "2020-01-15T17:30:00+03:30",
                          "status": false,
                          "tag": 20,
                          "comment": ""
                        }
                      ],
                      "date": "2020-01-15",
                      "absence_seconds": 5291.734134,
                      "trips": [
                        {
                          "request_datetime": "2020-01-15T15:02:53.507091+03:30",
                          "assign_datetime": "2020-01-15T15:03:05.289311+03:30",
                          "id": 1726120,
                          "courses": [
                            {
                              "id": 2633380,
                              "end_datetime": "2020-01-15T15:28:27+03:30",
                              "radial_end_to_end_distance": 3.1678023226569194,
                              "is_long": true
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "تهیه غذا گل یاس",
                          "is_round_trip": false,
                          "end_datetime": "2020-01-15T15:28:27+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T14:39:25.449147+03:30",
                          "assign_datetime": "2020-01-15T14:39:29.256853+03:30",
                          "id": 1725971,
                          "courses": [
                            {
                              "id": 2633140,
                              "end_datetime": "2020-01-15T14:55:12+03:30",
                              "radial_end_to_end_distance": 0.554773538189989,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "اهورا",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T15:02:23+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T14:25:17.004720+03:30",
                          "assign_datetime": "2020-01-15T14:25:25.658206+03:30",
                          "id": 1725866,
                          "courses": [
                            {
                              "id": 2632978,
                              "end_datetime": "2020-01-15T14:36:04+03:30",
                              "radial_end_to_end_distance": 0.2553254029662656,
                              "is_long": false
                            },
                            {
                              "id": 2632979,
                              "end_datetime": "2020-01-15T14:32:19+03:30",
                              "radial_end_to_end_distance": 0.18872457058450023,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "اهورا",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T14:37:52+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T13:46:07.714467+03:30",
                          "assign_datetime": "2020-01-15T13:46:17.157006+03:30",
                          "id": 1725562,
                          "courses": [
                            {
                              "id": 2632496,
                              "end_datetime": "2020-01-15T14:19:28+03:30",
                              "radial_end_to_end_distance": 0.011249108275583031,
                              "is_long": false
                            },
                            {
                              "id": 2632494,
                              "end_datetime": "2020-01-15T14:19:14+03:30",
                              "radial_end_to_end_distance": 0.012657498618597367,
                              "is_long": false
                            },
                            {
                              "id": 2632455,
                              "end_datetime": "2020-01-15T14:19:06+03:30",
                              "radial_end_to_end_distance": 0.4748264050348156,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "اهورا",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T14:22:53+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T12:53:16.024924+03:30",
                          "assign_datetime": "2020-01-15T12:53:36.253022+03:30",
                          "id": 1725094,
                          "courses": [
                            {
                              "id": 2631605,
                              "end_datetime": "2020-01-15T13:12:26+03:30",
                              "radial_end_to_end_distance": 0.9553523969044245,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "شادی اندرزگو",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T13:20:00+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T12:03:03.267951+03:30",
                          "assign_datetime": "2020-01-15T12:03:26.474656+03:30",
                          "id": 1724727,
                          "courses": [
                            {
                              "id": 2631028,
                              "end_datetime": "2020-01-15T12:07:43+03:30",
                              "radial_end_to_end_distance": 0.01429344236475458,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "کترینگ پلو",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T12:23:17.427800+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T11:45:23.484003+03:30",
                          "assign_datetime": "2020-01-15T11:45:53.264385+03:30",
                          "id": 1724657,
                          "courses": [
                            {
                              "id": 2630921,
                              "end_datetime": "2020-01-15T12:03:11+03:30",
                              "radial_end_to_end_distance": 0.009783316341434355,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "ساندویچ ایرونی",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T12:03:21+03:30"
                        }
                      ],
                      "course_bonuses": []
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-accounting-drivers-daily-kpi",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-01-15"
            },
            "in": "query",
            "name": "date",
            "required": true,
            "description": ""
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "header",
            "name": "ENTITY-ID",
            "description": "The ID of the driver in case that the request is from operation agent"
          }
        ],
        "description": "Returns detailed accounting report of a driver per date"
      }
    },
    "/re": {},
    "/reservation/capacities/": {
      "get": {
        "summary": "Get Capacities",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "area": {
                        "$ref": "#/components/schemas/Area"
                      },
                      "date": {
                        "type": "string",
                        "format": "date"
                      },
                      "interval_capacities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "interval": {
                              "$ref": "#/components/schemas/Interval"
                            },
                            "capacity": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "reserved": {
                              "type": "boolean"
                            },
                            "presence_rewards": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ConditionalReward"
                              }
                            },
                            "course_rewards": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ConditionalReward"
                              }
                            },
                            "guaranteed_reward": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ConditionalReward"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": [
                      {
                        "date": "2020-01-01",
                        "area": {
                          "id": 1,
                          "name": "شیخ بهایی"
                        },
                        "interval_capacities": [
                          {
                            "interval": {
                              "id": 2,
                              "name": "ظهر",
                              "start_time": "11:30:00",
                              "end_time": "15:30:00"
                            },
                            "capacity": 2,
                            "reserved": true
                          },
                          {
                            "interval": {
                              "id": 3,
                              "name": "شب",
                              "start_time": "19:30:00",
                              "end_time": "23:30:00"
                            },
                            "capacity": 0,
                            "reserved": false
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-reservation-capacities",
        "description": "Returns capacity report for area-date-interval"
      }
    },
    "area/driver-areas/zones/": {
      "get": {
        "summary": "zones",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/DriverZone"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "is_active": {
                            "type": "boolean"
                          }
                        }
                      }
                    ]
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": 1,
                        "name": "مرکزی",
                        "explanation": "شامل مناطق یوسف آباد و شیخ بهایی",
                        "is_active": true
                      },
                      {
                        "id": 2,
                        "name": "شمالی",
                        "explanation": "شامل مناطق اندرزگو و الهیه",
                        "is_active": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-driver-areas-zones",
        "description": "Returns All zones and driver active zone"
      },
      "parameters": []
    },
    "/area/driver-areas/set-zone/": {
      "post": {
        "summary": "Set Zone",
        "operationId": "post-area-driver-areas-set-zone",
        "responses": {
          "200": {
            "description": "{\n    \"status\": \"ok\"\n}"
          },
          "400": {
            "description": "Bad Request, if zone_id is not included in request\n\n{\n    \"detail\": \"Invalid input.\",\n    \"code\": \"invalid\",\n    \"metadata\": {\n        \"field_name\": \"zone_id\",\n        \"required_data_type\": \"None\"\n    }\n}"
          },
          "404": {
            "description": "Not Found, if zone_id is not valid\n{\n    \"detail\": \"Not found.\",\n    \"code\": \"not_found\"\n}"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "zone_id": {
                    "type": "integer"
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "zone_id": [
                      "1"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "reservation"
        ]
      }
    },
    "/accounting/drivers/week_review/": {
      "get": {
        "summary": "Week Review Report",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "string"
                    },
                    "comission_items": {
                      "type": "string"
                    },
                    "current_week_balance": {
                      "type": "string"
                    },
                    "daily_kpi": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DailyKPI"
                      }
                    },
                    "debt_items": {
                      "type": "integer"
                    },
                    "due_from_last_week": {
                      "type": "integer"
                    },
                    "kpi_review": {
                      "type": "object"
                    },
                    "out_of_shift_comissions": {
                      "type": "integer",
                      "enum": [
                        0
                      ]
                    },
                    "out_of_shift_kilometers": {
                      "type": "integer",
                      "enum": [
                        0
                      ]
                    },
                    "plan": {
                      "$ref": "#/components/schemas/DriverPlan"
                    },
                    "punishment_items": {
                      "type": "array",
                      "items": {}
                    },
                    "referral_items": {
                      "type": "array",
                      "items": {}
                    },
                    "reward_items": {
                      "type": "array",
                      "items": {}
                    },
                    "shifts": {
                      "type": "array",
                      "maxItems": 0,
                      "items": {}
                    },
                    "total_comission": {
                      "type": "integer",
                      "enum": [
                        "0"
                      ]
                    },
                    "total_debt": {
                      "type": "integer"
                    },
                    "total_punishment": {
                      "type": "integer"
                    },
                    "total_referral": {
                      "type": "integer"
                    },
                    "total_reward": {
                      "type": "integer"
                    },
                    "": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "reward_items": [
                        {
                          "created_at": "2020-07-12T11:31:06.444472Z",
                          "course_id": 13213,
                          "type": {
                            "id": 31,
                            "name": "مسیر طولانی"
                          },
                          "id": 446342,
                          "reason": "درآمد مازاد مسیر دور آشپزخانه آذری",
                          "amount": 2000
                        }
                      ],
                      "debt_items": [],
                      "commission_items": [],
                      "total_punishment": 0,
                      "total_commission": 0,
                      "total_debt": 0,
                      "total_reward": 2000,
                      "total_referral": 0,
                      "due_from_last_week": -1594153,
                      "out_of_shift_kilometers": 0,
                      "balance": -1592153,
                      "plan": {
                        "name": "طرح بسیار موقتی",
                        "id": 146,
                        "assign_weight": 1,
                        "type": 3,
                        "intervals": [
                          {
                            "id": 13,
                            "name": "اینتروالی برای تست",
                            "start_time": "10:15:00",
                            "end_time": "23:30:00"
                          }
                        ],
                        "reservable": false,
                        "max_acceptable_absence_hours": 12,
                        "min_acceptable_courses_count": 85
                      },
                      "referral_items": [],
                      "kpi_review": {
                        "fix_salary": 0,
                        "courses_salary": 9000,
                        "balance_change": 9000,
                        "fix_reward": null,
                        "absence_punishments": [],
                        "plan_fix_reward": 0,
                        "fix_salary_applicable": false,
                        "reward_threshold": 0,
                        "dynamic_reward": null
                      },
                      "out_of_shift_commission": 0,
                      "daily_kpi": [
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-11",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 1,
                          "courses_count": 3,
                          "date": "2020-07-12",
                          "long_courses_count": 1,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-13",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-14",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-15",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-16",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-17",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        }
                      ],
                      "punishment_items": [],
                      "shifts": [],
                      "current_week_balance": -1592153
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-accounting-drivers-week_review",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date",
            "description": "",
            "required": true
          }
        ]
      }
    },
    "/reservation/orders/{order_id}/cancel/": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancel Order",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "post-reservation-orders-order_id-cancel",
        "description": "Cancel a pending order"
      }
    },
    "/issues/{issue_id}/pick/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "issue_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Issue Pick",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (The requester is not staff)"
          },
          "404": {
            "description": "Not Found (No issue found with the same id)"
          }
        },
        "operationId": "post-issues-issue_id-pick"
      }
    },
    "/notification/static-contents/{category_name}/": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "enum": [
              "reservation-tutorial",
              "...",
              "app-tutorials",
              "sheba-reminder",
              "assign-overview-rating",
              "assign-overview-shift-start",
              "assign-overview-courses-count",
              "assign-overview-presence-rating"
            ]
          },
          "name": "category_name",
          "in": "path",
          "required": true,
          "description": "The name of the category which user expects to see its contents"
        }
      ],
      "get": {
        "summary": "Get static contents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StaticContent"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/StaticContent"
                    }
                  ]
                },
                "examples": {
                  "obj-example": {
                    "value": {
                      "id": 1,
                      "name": "v1",
                      "file_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B1.JPG",
                      "seen": true,
                      "description": null,
                      "thumbnail_url": null
                    }
                  },
                  "list-example": {
                    "value": [
                      {
                        "id": 1,
                        "name": "pic 1",
                        "file_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B1.MP4",
                        "seen": false,
                        "description": null,
                        "thumbnail_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B1.JPG"
                      },
                      {
                        "id": 3,
                        "name": "pic 2",
                        "file_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B2.JPG",
                        "seen": true,
                        "description": "Lorem Ipsum",
                        "thumbnail_url": null
                      }
                    ]
                  },
                  "empty-list-example": {
                    "value": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (No content obj is created for the given obj category || category not found)"
          }
        },
        "operationId": "get-notification-static-contents-category_name",
        "tags": [
          "notifications"
        ]
      }
    },
    "/accounting/drivers/reservers/week-review/": {
      "get": {
        "summary": "reservers-week-review",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reward_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reward"
                      }
                    },
                    "total_reward": {
                      "type": "integer",
                      "description": "Signed"
                    },
                    "punishments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reward"
                      }
                    },
                    "total_punishment": {
                      "type": "integer",
                      "description": "Signed"
                    },
                    "referral_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Referral"
                      }
                    },
                    "total_referral": {
                      "type": "integer"
                    },
                    "debt_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Debt"
                      }
                    },
                    "total_debt": {
                      "type": "integer",
                      "maximum": 0,
                      "description": "Signed"
                    },
                    "daily_kpi": {
                      "type": "array",
                      "description": "The driver salary amount per each week day if the driver works at the date",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date"
                          },
                          "salary": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "review": {
                      "type": "object",
                      "properties": {
                        "online_duration": {
                          "type": "string"
                        },
                        "trips_count": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "courses_salary": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "on_trip_duration": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reward_items": [
                        {
                          "amount": 850,
                          "type": {
                            "id": 5,
                            "name": "بازگشت سفر"
                          },
                          "id": 269036,
                          "reason": "درآمد مازاد بازگشت سفر فودکورت لوکال‌هاست",
                          "created_at": "2019-09-20T19:03:50.690277Z",
                          "course_id": 321432
                        }
                      ],
                      "balance": 11900,
                      "due_from_last_week": 0,
                      "punishment_items": [
                        {
                          "amount": 20000,
                          "type": {
                            "id": 4,
                            "name": "تیکت"
                          },
                          "id": 16464,
                          "reason": "امتناع از سفر آخر وقت تهیه غذای خیلی خوب",
                          "created_at": "2019-09-17T19:00:00Z",
                          "course_id": null
                        }
                      ],
                      "review": {
                        "online_duration": "P0DT00H00M00.159056S",
                        "on_trip_duration": "P0DT00H03M04S",
                        "trips_count": 72,
                        "courses_salary": 1095000
                      },
                      "total_reward": 35500,
                      "total_punishment": -20000,
                      "referral_items": [],
                      "debt_items": [
                        {
                          "amount": 20000,
                          "debt_info": {
                            "id": 5589,
                            "name": "ذخیره صندوق",
                            "total_amount": "500000",
                            "total_installments": 25,
                            "payment_start_date": "2019-07-31",
                            "return_at_quit": true,
                            "type": {
                              "id": 36,
                              "name": "ذخیره صندوق"
                            }
                          },
                          "paid": 140000,
                          "date": "2019-09-18"
                        }
                      ],
                      "daily_kpi": [
                        {
                          "salary": 6800,
                          "date": "2019-09-14"
                        },
                        {
                          "salary": 5100,
                          "date": "2019-09-15"
                        },
                        {
                          "salary": 1700,
                          "date": "2019-09-16"
                        },
                        {
                          "salary": -18300,
                          "date": "2019-09-17"
                        },
                        {
                          "salary": 4250,
                          "date": "2019-09-18"
                        },
                        {
                          "salary": 4250,
                          "date": "2019-09-19"
                        },
                        {
                          "salary": 1086700,
                          "date": "2019-09-20"
                        }
                      ],
                      "total_debt": -20000,
                      "total_referral": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-accounting-drivers-reservers-week-review",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-08-21"
            },
            "in": "query",
            "name": "date",
            "description": "The date of weekend which the weekly report is requested for. If requesting current week, the date should be equal to today date. ",
            "required": true
          }
        ]
      }
    },
    "/accounting/drivers/weekly-summary/": {
      "get": {
        "summary": "Weekly Summary",
        "tags": [
          "accounting"
        ],
        "responses": {},
        "operationId": "get-accounting-drivers-weekly-summary",
        "description": "Serialze earned salary of drivers, grouped by Jalali week",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "year": {
                      "type": "integer"
                    },
                    "week": {
                      "type": "integer",
                      "description": "Iso number of the week"
                    },
                    "salary": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/accounting/drivers/reservers/daily-kpi/": {
      "get": {
        "summary": "Reservers Daily KPI",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date"
                    },
                    "referrals": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Referral"
                      }
                    },
                    "punishments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reward"
                      }
                    },
                    "rewards": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reward"
                      }
                    },
                    "debts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Debt"
                      }
                    },
                    "salary": {
                      "type": "integer"
                    },
                    "trips": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "request_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "courses": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "end_datetime": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "radial_end_to_end_distance": {
                                  "type": "number"
                                },
                                "is_long": {
                                  "type": "boolean"
                                },
                                "destination_text": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "destination": {
                                  "$ref": "#/components/schemas/Location"
                                }
                              }
                            }
                          },
                          "course_bonuses": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "count": {
                                  "type": "integer"
                                },
                                "date": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "description": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "source_title": {
                            "type": "string"
                          },
                          "is_round_trip": {
                            "type": "boolean"
                          },
                          "end_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "raw_salary": {
                            "type": "integer"
                          },
                          "assign_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "rewards": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/Reward"
                            }
                          },
                          "source_location": {
                            "$ref": "#/components/schemas/Location"
                          },
                          "return_distance": {
                            "type": [
                              "number",
                              "null"
                            ],
                            "description": "Return distance in KM"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "date": "2020-01-10",
                      "salary": 941700,
                      "trips": [
                        {
                          "request_datetime": "2020-01-10T22:50:08.915193+03:30",
                          "assign_datetime": "2020-01-10T22:50:19.790748+03:30",
                          "id": 1711813,
                          "courses": [
                            {
                              "id": 2611648,
                              "destination_text": "مرزداران - شهرک آزمایش، بلوار آریافر، لاله",
                              "end_datetime": "2020-01-10T22:58:40+03:30",
                              "destination": {
                                "latitude": 35.732822,
                                "longitude": 51.356545
                              },
                              "radial_end_to_end_distance": 0.30045672580271127,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [
                            {
                              "id": 1198023,
                              "count": 1,
                              "date": "2020-01-07",
                              "description": "اضافه کاری سفر فست فود لنوو"
                            }
                          ],
                          "source_title": "فست‌فودی دیگر در مرزداران",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T22:58:40+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.733506,
                            "longitude": 51.359762
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T22:26:13.995336+03:30",
                          "assign_datetime": "2020-01-10T22:26:15.611767+03:30",
                          "id": 1711708,
                          "courses": [
                            {
                              "id": 2611501,
                              "destination_text": "مرزداران - شهرک آزمایش، سرسبزجنوبی",
                              "end_datetime": "2020-01-10T22:37:52+03:30",
                              "destination": {
                                "latitude": 35.73338,
                                "longitude": 51.359707
                              },
                              "radial_end_to_end_distance": 0.014907640834019218,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فست‌فودی دیگر در مرزداران",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T22:37:52+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.733506,
                            "longitude": 51.359762
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T21:51:21.295148+03:30",
                          "assign_datetime": "2020-01-10T21:51:39.576195+03:30",
                          "id": 1711542,
                          "courses": [
                            {
                              "id": 2611350,
                              "destination_text": "آلستوم، یاسمن یکم",
                              "end_datetime": "2020-01-10T22:22:04+03:30",
                              "destination": {
                                "latitude": 35.72822,
                                "longitude": 51.364557
                              },
                              "radial_end_to_end_distance": 1.8115891865091371,
                              "is_long": false
                            },
                            {
                              "id": 2611246,
                              "destination_text": "چوب تراش، بیدکی",
                              "end_datetime": "2020-01-10T22:12:09+03:30",
                              "destination": {
                                "latitude": 35.716035,
                                "longitude": 51.35127
                              },
                              "radial_end_to_end_distance": 1.1774974598309311,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فست‌فودی دیگر در مرزداران",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T22:22:04+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.721652,
                            "longitude": 51.34023
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T21:26:14.992725+03:30",
                          "assign_datetime": "2020-01-10T21:26:35.366963+03:30",
                          "id": 1711380,
                          "courses": [
                            {
                              "id": 2611006,
                              "destination_text": "خرم رودی",
                              "end_datetime": "2020-01-10T21:49:48+03:30",
                              "destination": {
                                "latitude": 35.726674,
                                "longitude": 51.341927
                              },
                              "radial_end_to_end_distance": 1.7821166383804594,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فست‌فودی دیگر در مرزداران",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T21:49:48+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.733506,
                            "longitude": 51.359762
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T20:50:42.371840+03:30",
                          "assign_datetime": "2020-01-10T20:50:50.447251+03:30",
                          "id": 1711177,
                          "courses": [
                            {
                              "id": 2610700,
                              "destination_text": "مهران، سازمان آب",
                              "end_datetime": "2020-01-10T21:12:00+03:30",
                              "destination": {
                                "latitude": 35.736022,
                                "longitude": 51.316446
                              },
                              "radial_end_to_end_distance": 1.8466388607237396,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "کترینگ لنوو",
                          "is_round_trip": true,
                          "return_distance": 1.453213,
                          "end_datetime": "2020-01-10T21:22:41+03:30",
                          "raw_salary": 0,
                          "rewards": [
                            {
                              "id": 410478,
                              "created_at": "2020-01-10T17:52:46.178713Z",
                              "amount": 850,
                              "reason": "درآمد مازاد بازگشت سفر کترینگ لنوو",
                              "course_id": 2610700,
                              "type": {
                                "id": 5,
                                "name": "بازگشت سفر"
                              }
                            }
                          ],
                          "source_location": {
                            "latitude": 35.736005,
                            "longitude": 51.336883
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T20:29:50.551033+03:30",
                          "assign_datetime": "2020-01-10T20:29:56.163430+03:30",
                          "id": 1711053,
                          "courses": [
                            {
                              "id": 2610514,
                              "destination_text": "شهرک هما، گلبرگ",
                              "end_datetime": "2020-01-10T20:50:13+03:30",
                              "destination": {
                                "latitude": 35.734965,
                                "longitude": 51.337437
                              },
                              "radial_end_to_end_distance": 2.0238333105243784,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فست‌فودی دیگر در مرزداران",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T20:50:13+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.733506,
                            "longitude": 51.359762
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T20:04:13.225420+03:30",
                          "assign_datetime": "2020-01-10T20:04:21.918217+03:30",
                          "id": 1710909,
                          "courses": [
                            {
                              "id": 2610325,
                              "destination_text": "خرم رودی، بلوار خرم رودی",
                              "end_datetime": "2020-01-10T20:29:33+03:30",
                              "destination": {
                                "latitude": 35.730546,
                                "longitude": 51.346278
                              },
                              "radial_end_to_end_distance": 1.2622015067934678,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فست‌فودی دیگر در مرزداران",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T20:29:33+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.733506,
                            "longitude": 51.359762
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T19:19:39.822217+03:30",
                          "assign_datetime": "2020-01-10T19:19:44.642391+03:30",
                          "id": 1710695,
                          "courses": [
                            {
                              "id": 2610027,
                              "destination_text": "پردیسان، نسیبه",
                              "end_datetime": "2020-01-10T19:41:08+03:30",
                              "destination": {
                                "latitude": 35.739421,
                                "longitude": 51.349866
                              },
                              "radial_end_to_end_distance": 1.1105006465444904,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فست‌فودی دیگر در مرزداران",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T19:41:08+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.733506,
                            "longitude": 51.359762
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T18:50:12.934853+03:30",
                          "assign_datetime": "2020-01-10T18:50:40.462139+03:30",
                          "id": 1710610,
                          "courses": [
                            {
                              "id": 2609917,
                              "destination_text": "پردیسان، البرز، سپهر",
                              "end_datetime": "2020-01-10T19:14:35+03:30",
                              "destination": {
                                "latitude": 35.737567,
                                "longitude": 51.353961
                              },
                              "radial_end_to_end_distance": 0.4833733932028356,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فست‌فودی در مرزداران",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T19:14:35+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.733507,
                            "longitude": 51.352065
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T18:19:47.936209+03:30",
                          "assign_datetime": "2020-01-10T18:20:06.140172+03:30",
                          "id": 1710558,
                          "courses": [
                            {
                              "id": 2609863,
                              "destination_text": "پردیسان، سپهر دهم",
                              "end_datetime": "2020-01-10T18:34:40+03:30",
                              "destination": {
                                "latitude": 35.737903,
                                "longitude": 51.357231
                              },
                              "radial_end_to_end_distance": 0.3357174974459386,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "تهیه غذای ایران",
                          "is_round_trip": true,
                          "return_distance": 0.2323124,
                          "end_datetime": "2020-01-10T18:38:44+03:30",
                          "raw_salary": 0,
                          "rewards": [
                            {
                              "id": 410130,
                              "created_at": "2020-01-10T15:08:47.939173Z",
                              "amount": 850,
                              "course_id": null,
                              "reason": "درآمد مازاد بازگشت سفر تهیه غذای ایران",
                              "type": {
                                "id": 5,
                                "name": "بازگشت سفر"
                              }
                            }
                          ],
                          "source_location": {
                            "latitude": 35.734901,
                            "longitude": 51.357582
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T15:37:07.759463+03:30",
                          "assign_datetime": "2020-01-10T15:37:09.992133+03:30",
                          "id": 1710147,
                          "courses": [
                            {
                              "id": 2609340,
                              "destination_text": "پردیسان، نسیبه، فرشته ۴",
                              "end_datetime": "2020-01-10T15:51:00+03:30",
                              "destination": {
                                "latitude": 35.739357,
                                "longitude": 51.349941
                              },
                              "radial_end_to_end_distance": 1.1007944522732551,
                              "is_long": false
                            },
                            {
                              "id": 2609320,
                              "destination_text": "خرم رودی، آرش",
                              "end_datetime": "2020-01-10T15:57:52+03:30",
                              "destination": {
                                "latitude": 35.728981,
                                "longitude": 51.346392
                              },
                              "radial_end_to_end_distance": 1.1987017125490236,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فست‌فود ما",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T15:57:52+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.733506,
                            "longitude": 51.359762
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T14:52:55.453818+03:30",
                          "assign_datetime": "2020-01-10T14:53:01.464784+03:30",
                          "id": 1709929,
                          "courses": [
                            {
                              "id": 2609087,
                              "destination_text": "همایون شهر، عباس دهقان",
                              "end_datetime": "2020-01-10T15:10:02+03:30",
                              "destination": {
                                "latitude": 35.718428,
                                "longitude": 51.360829
                              },
                              "radial_end_to_end_distance": 1.106064765509178,
                              "is_long": false
                            },
                            {
                              "id": 2609008,
                              "destination_text": "توحید، کامران",
                              "end_datetime": "2020-01-10T15:29:13+03:30",
                              "destination": {
                                "latitude": 35.702992,
                                "longitude": 51.373673
                              },
                              "radial_end_to_end_distance": 0.33095596352575196,
                              "is_long": false
                            },
                            {
                              "id": 2609085,
                              "destination_text": "توحید، نصرت غربی، عباس مجتهدی",
                              "end_datetime": "2020-01-10T15:23:40+03:30",
                              "destination": {
                                "latitude": 35.705965,
                                "longitude": 51.373693
                              },
                              "radial_end_to_end_distance": 1.8101390472621597,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "فودکورت",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T15:29:13+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.721839,
                            "longitude": 51.349335
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T13:16:30.493104+03:30",
                          "assign_datetime": "2020-01-10T13:16:43.233043+03:30",
                          "id": 1709349,
                          "courses": [
                            {
                              "id": 2608098,
                              "destination_text": "آلستوم، مهدی",
                              "end_datetime": "2020-01-10T13:29:18+03:30",
                              "destination": {
                                "latitude": 35.724012,
                                "longitude": 51.362449
                              },
                              "radial_end_to_end_distance": 0.45461898021910935,
                              "is_long": false
                            },
                            {
                              "id": 2608097,
                              "destination_text": "آلستوم، سوم شرقی",
                              "end_datetime": "2020-01-10T13:36:48+03:30",
                              "destination": {
                                "latitude": 35.722826,
                                "longitude": 51.357309
                              },
                              "radial_end_to_end_distance": 0.48288311602200895,
                              "is_long": false
                            },
                            {
                              "id": 2608099,
                              "destination_text": "آلستوم، سوم شرقی",
                              "end_datetime": "2020-01-10T13:36:49+03:30",
                              "destination": {
                                "latitude": 35.722826,
                                "longitude": 51.357309
                              },
                              "radial_end_to_end_distance": 0.000036149726015473884,
                              "is_long": false
                            },
                            {
                              "id": 2608100,
                              "destination_text": "آلستوم، بلوار سازمان آب، یاور نژاد",
                              "end_datetime": "2020-01-10T13:38:03+03:30",
                              "destination": {
                                "latitude": 35.725577,
                                "longitude": 51.357394
                              },
                              "radial_end_to_end_distance": 0.3063335669186157,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "کبابی ۱",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T13:38:03+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.725802,
                            "longitude": 51.357927
                          }
                        },
                        {
                          "request_datetime": "2020-01-10T13:01:15.673054+03:30",
                          "assign_datetime": "2020-01-10T13:01:40.613975+03:30",
                          "id": 1709276,
                          "courses": [
                            {
                              "id": 2607996,
                              "destination_text": "آلستوم، حاجی پور امیر",
                              "end_datetime": "2020-01-10T13:14:55+03:30",
                              "destination": {
                                "latitude": 35.72708,
                                "longitude": 51.361942
                              },
                              "radial_end_to_end_distance": 0.38971784707790325,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "کبابی ۱",
                          "is_round_trip": false,
                          "return_distance": null,
                          "end_datetime": "2020-01-10T13:14:55+03:30",
                          "raw_salary": 0,
                          "rewards": [],
                          "source_location": {
                            "latitude": 35.725802,
                            "longitude": 51.357927
                          }
                        }
                      ],
                      "referrals": [],
                      "punishments": [],
                      "debts": [],
                      "rewards": [
                        {
                          "id": 410130,
                          "created_at": "2020-01-10T15:08:47.939173Z",
                          "amount": 850,
                          "reason": "درآمد مازاد بازگشت سفر کبابی ۱",
                          "course_id": 321323,
                          "type": {
                            "id": 5,
                            "name": "بازگشت سفر"
                          }
                        },
                        {
                          "id": 410478,
                          "created_at": "2020-01-10T17:52:46.178713Z",
                          "amount": 850,
                          "course_id": null,
                          "reason": "درآمد مازاد بازگشت سفر راوی",
                          "type": {
                            "id": 5,
                            "name": "بازگشت سفر"
                          }
                        },
                        {
                          "id": 412769,
                          "created_at": "2020-01-10T08:30:00Z",
                          "amount": 84000,
                          "course_id": null,
                          "reason": "کمک هزینه بنزین کارکرد ۱۴ الی ۲۰ دی ۹۸",
                          "type": {
                            "id": 28,
                            "name": "کمک هزینه بنزین"
                          }
                        },
                        {
                          "id": 415004,
                          "created_at": "2020-01-10T14:36:00Z",
                          "amount": 1000,
                          "course_id": null,
                          "reason": "مازاد درآمد سفرهای بالای ۲.۵ کیلومتر از تاریخ ۱۴ الی ۱۷ دی ۹۸",
                          "type": {
                            "id": 14,
                            "name": "سفرهای بالای ۲.۵ کیلومتر"
                          }
                        },
                        {
                          "id": 417693,
                          "created_at": "2020-01-10T10:06:12Z",
                          "amount": 58000,
                          "course_id": null,
                          "reason": "اصلاحیه کارکرد هفته اول",
                          "type": {
                            "id": 16,
                            "name": "اصلاح کارکرد"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-accounting-drivers-reservers-daily-kpi",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date",
            "required": true
          }
        ]
      }
    },
    "/driver-api/issues/": {
      "post": {
        "summary": "New Issue from Driver",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Missing problem\\_id or description required for given problem\\_id)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "missing_param"
                      ]
                    },
                    "detail": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "code": "missing_param",
                      "detail": "Required problem_id"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "post-driver-api-issues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewIssueRequestBody"
              }
            }
          },
          "description": ""
        }
      }
    },
    "/client-api/issues/": {
      "post": {
        "summary": "New Issue from Client",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request (Missing problem_id or description required for given problem_id)"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "post-client-api-issues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewIssueRequestBody"
              }
            }
          }
        }
      }
    },
    "/staff-api/issues/": {
      "post": {
        "summary": "New Issue from Staff",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Missing problem_id or description required for given problem_id)\n"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "post-staff-api-issues",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewIssueRequestBody"
              }
            }
          }
        }
      }
    },
    "/accounting/client/tariff/": {
      "get": {
        "summary": "Client Tariff",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "area_prices": {
                      "type": "array",
                      "description": "contains all radial distances prices and there is one price for each radial distance defineded in tariff",
                      "items": {
                        "type": "object"
                      }
                    },
                    "off_percents": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "radii": {
                      "type": "array",
                      "description": "radial distances and its count is equal to area_prices count",
                      "items": {
                        "type": "object"
                      }
                    },
                    "round_trip_fee": {
                      "type": "number"
                    },
                    "base_trip_fee": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "area_prices": [
                        {
                          "1": 2800,
                          "2": 3300,
                          "3": 3800
                        }
                      ],
                      "off_percents": [
                        {}
                      ],
                      "radii": [
                        {
                          "1": 0.5,
                          "2": 1,
                          "3": 1.5
                        }
                      ],
                      "round_trip_fee": 1500,
                      "base_trip_fee": 5000
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "'no_client_financials',\n'Client does not have client financials'"
          }
        },
        "operationId": "get-accounting-client-tariff",
        "description": "Client per course cost tariff"
      }
    },
    "/accounting/trip_financials/{trip_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "trip_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Trip Financials",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Course_financials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "course": {
                            "type": "object",
                            "properties": {
                              "destination": {
                                "$ref": "#/components/schemas/Location"
                              },
                              "destination_text": {
                                "type": "string"
                              },
                              "end_datetime": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-01-01T22:30:00+03:30"
                              },
                              "feedback": {
                                "$ref": "#/components/schemas/Feedback"
                              },
                              "id": {
                                "type": "integer"
                              },
                              "is_long": {
                                "type": "boolean"
                              },
                              "meta": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "package_info": {
                                "$ref": "#/components/schemas/Package_info"
                              },
                              "price_details": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/PriceDetails"
                                }
                              },
                              "requested_destination_address": {
                                "type": "string"
                              }
                            }
                          },
                          "id": {
                            "type": "integer"
                          },
                          "paid_at_destination": {
                            "type": "boolean"
                          },
                          "price": {
                            "type": "integer"
                          },
                          "ticket": {
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$ref": "#/components/schemas/Ticket"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "final_price": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "price_changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PriceDetails"
                      }
                    },
                    "trip": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "aborted_for_delay": {
                            "type": "boolean"
                          },
                          "accept_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "arrival_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "assign_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "cancel_datetime": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "format": "date-time"
                          },
                          "course_bonuses": {
                            "type": "array",
                            "items": {}
                          },
                          "departure_datetime": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "format": "date-time"
                          },
                          "driver": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean"
                              },
                              "avatar": {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "format": "byte"
                              },
                              "busy": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "integer"
                              },
                              "phone": {
                                "type": "integer"
                              },
                              "user": {
                                "$ref": "#/components/schemas/User"
                              }
                            }
                          },
                          "driver_tag": {
                            "type": "integer"
                          },
                          "end_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "feedback": {
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$ref": "#/components/schemas/RestaurantFeedback"
                              }
                            ]
                          },
                          "id": {
                            "type": "integer"
                          },
                          "is_round_trip": {
                            "type": "boolean"
                          },
                          "long_courses_count": {
                            "type": "integer"
                          },
                          "price_details": {
                            "type": "array",
                            "description": "base_price goes here",
                            "items": {
                              "$ref": "#/components/schemas/PriceDetails"
                            }
                          },
                          "request_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "requested_arrival_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "return_datetime": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "format": "date-time"
                          },
                          "rewards": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/Reward"
                            }
                          },
                          "seen_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "source_address": {
                            "type": "string"
                          },
                          "source_phone": {
                            "type": "integer"
                          },
                          "source_title": {
                            "type": "string"
                          },
                          "state": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": 1600922,
                      "final_price": 14000,
                      "course_financials": [
                        {
                          "id": 2505846,
                          "price": 7000,
                          "course": {
                            "id": 2698588,
                            "meta": null,
                            "destination_text": "",
                            "end_datetime": "2020-09-01T14:42:36+04:30",
                            "requested_destination_address": "",
                            "destination": {
                              "longitude": 51.328303,
                              "latitude": 35.724573
                            },
                            "feedback": null,
                            "price_details": [
                              {
                                "id": 5519818,
                                "regulation": "delivery_cost",
                                "price_delta": 7000
                              },
                              {
                                "id": 5519820,
                                "regulation": "wage",
                                "price_delta": 0
                              }
                            ],
                            "package_info": {
                              "id": 2423536,
                              "course_id": 2698588,
                              "driver": "رضا پورمشکی",
                              "price": 0,
                              "bill_number": null,
                              "confirmed": true,
                              "customer": null,
                              "payment_type": 1,
                              "paid_back": false,
                              "destination_text": ""
                            },
                            "is_long": false
                          },
                          "ticket": null,
                          "paid_at_destination": false
                        },
                        {
                          "id": 2505847,
                          "price": 7000,
                          "course": {
                            "id": 2698589,
                            "meta": null,
                            "destination_text": "",
                            "end_datetime": "2020-09-01T14:42:36+04:30",
                            "requested_destination_address": "",
                            "destination": {
                              "longitude": 51.328303,
                              "latitude": 35.724573
                            },
                            "feedback": null,
                            "price_details": [
                              {
                                "id": 5519819,
                                "regulation": "delivery_cost",
                                "price_delta": 7000
                              },
                              {
                                "id": 5519821,
                                "regulation": "wage",
                                "price_delta": 0
                              }
                            ],
                            "package_info": {
                              "id": 2423534,
                              "course_id": 2698589,
                              "driver": "رضا پورمشکی",
                              "price": 0,
                              "bill_number": null,
                              "confirmed": true,
                              "customer": null,
                              "payment_type": 1,
                              "paid_back": false,
                              "destination_text": ""
                            },
                            "is_long": false
                          },
                          "ticket": null,
                          "paid_at_destination": false
                        }
                      ],
                      "price_changes": [],
                      "base_trip_fee": 0,
                      "trip": {
                        "driver": {
                          "id": 6776,
                          "available": false,
                          "busy": false,
                          "phone": "09369491968",
                          "avatar": null,
                          "user": {
                            "first_name": "رضا",
                            "last_name": "پورمشکی",
                            "user_name": "partizaans",
                            "is_staff": false
                          }
                        },
                        "request_datetime": "2020-09-01T14:41:41.585528+04:30",
                        "requested_arrival_datetime": "2020-09-01T14:56:41.585528+04:30",
                        "assign_datetime": "2020-09-01T14:42:15.048114+04:30",
                        "arrival_datetime": null,
                        "seen_datetime": null,
                        "accept_datetime": "2020-09-01T14:42:36+04:30",
                        "cancel_datetime": null,
                        "state": 50,
                        "id": 1768468,
                        "aborted_for_delay": false,
                        "driver_tag": 1,
                        "course_bonuses": [],
                        "source_title": "آشپزخانه آذری",
                        "source_address": "خیابان ستارخان - خیابان شادمان - پلاک ۵",
                        "source_phone": "02188231102",
                        "feedback": null,
                        "departure_datetime": null,
                        "is_round_trip": false,
                        "return_datetime": null,
                        "price_details": [
                          {
                            "id": 5519817,
                            "regulation": "base_cost",
                            "price_delta": 0
                          }
                        ],
                        "end_datetime": "2020-09-01T14:42:36+04:30",
                        "long_courses_count": 0,
                        "rewards": []
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "permission_denied"
          },
          "404": {
            "description": "not_found"
          }
        },
        "operationId": "get-accounting-trip_financials-trip_id",
        "parameters": [],
        "description": "Returns the requested trip details"
      }
    },
    "/staff-api/issues/{issue_id}/resolve/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "issue_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Resolve issue by staff",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          }
        },
        "operationId": "post-staff-api-issues-issue_id-resolve"
      }
    },
    "/driver-api/issues/{issue_id}/resolve/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "issue_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Resolve issue by driver",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          }
        },
        "operationId": "post-driver-api-issues-issue_id-resolve"
      }
    },
    "/client-api/issues/{issue_id}/resolve/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "issue_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Resolve issue by client",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          }
        },
        "operationId": "post-client-api-issues-issue_id-resolve"
      }
    },
    "/notification/static-contents/{static_content_id}/seen/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "static_content_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Seen static content",
        "tags": [
          "notifications"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          }
        },
        "operationId": "post-notification-static-contents-static_content_id-seen"
      }
    },
    "/trip-management/staff-api/trips/{trip_id}/driver-trace/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "trip_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Driver Trace",
        "tags": [
          "location"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "locations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "location": {
                            "description": "",
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "string"
                              },
                              "longitude": {
                                "type": "number"
                              }
                            }
                          },
                          "datetime": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "locations": [
                        {
                          "location": {
                            "latitude": 35.3,
                            "longitude": 53.54
                          },
                          "datetime": "2019-08-24T14:15:22Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (trip not found)"
          }
        },
        "operationId": "get-locations-staff-api-tripline-trip_id",
        "description": "Returns location information for given trip id"
      }
    },
    "/trip-management/client-api/courses/{course_id}/report-long/": {
      "post": {
        "summary": "Report course as long",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden (not_owner or dispatched_course)"
          }
        },
        "operationId": "post-trip-management-client-api-courses-432-report-long",
        "description": "Sets repoted\\_as\\_long for a course",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reported_as_long": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "course_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/assign/drivers/overview/": {
      "get": {
        "summary": "Driver Assign Overview",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "limited_courses_count": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "present_at_shift_start": {
                      "type": "boolean"
                    },
                    "rating": {
                      "type": "integer"
                    },
                    "feedbacked_clients_count": {
                      "type": "integer"
                    },
                    "feedbacked_customers_count": {
                      "type": "integer"
                    },
                    "newbies_courses_count_threshold": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "presence_rating": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-assign-drivers-overview",
        "description": "Returns an overview of parameters that affect drivers assign score"
      }
    },
    "/accounting/client/transactions": {
      "get": {
        "summary": "ClientTransactions",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "concurrency_costs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConcurrencyCost"
                      }
                    },
                    "misc_expenses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ClientMiscExpense"
                      }
                    },
                    "payments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ClientPayment"
                      }
                    },
                    "trip_financials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "driver": {
                            "type": "string"
                          },
                          "driver_tag": {
                            "type": "integer"
                          },
                          "final_price": {
                            "type": "integer"
                          },
                          "has_price_change": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "request_datetime": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "source_title": {
                            "type": "string"
                          },
                          "trip_id": {
                            "type": "integer"
                          },
                          "courses": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "bill_number": {
                                  "type": [
                                    "null",
                                    "integer"
                                  ]
                                },
                                "confirmed": {
                                  "type": "boolean"
                                },
                                "course_id": {
                                  "type": "integer"
                                },
                                "customer": {
                                  "$ref": "#/components/schemas/Customer"
                                },
                                "destination_text": {
                                  "type": "string"
                                },
                                "driver": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "integer"
                                },
                                "paid_back": {
                                  "type": "boolean"
                                },
                                "payment_type": {
                                  "type": "integer"
                                },
                                "price": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "trip_price_changes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TripPriceChanges"
                      }
                    },
                    "withdrawals": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Withdrawals"
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "concurrency_costs": [
                        {
                          "id": 0,
                          "created_at": "2019-08-24T14:15:22Z",
                          "amount": 0,
                          "start_date": "2019-08-24",
                          "end_date": "2019-08-24"
                        }
                      ],
                      "misc_expenses": [
                        {
                          "id": 0,
                          "title": "string",
                          "created_at": "2019-08-24T14:15:22Z",
                          "amount": 0
                        }
                      ],
                      "payments": [
                        {
                          "id": 0,
                          "amount": 0,
                          "datetime": "2019-08-24T14:15:22Z"
                        }
                      ],
                      "trip_financials": [
                        {
                          "driver": "string",
                          "driver_tag": 0,
                          "final_price": 0,
                          "has_price_change": true,
                          "id": 0,
                          "request_datetime": "2019-08-24T14:15:22Z",
                          "source_title": "string",
                          "trip_id": 0,
                          "courses": [
                            {
                              "bill_number": null,
                              "confirmed": true,
                              "course_id": 0,
                              "customer": {
                                "name": "string",
                                "phone": 0
                              },
                              "destination_text": "string",
                              "driver": "string",
                              "id": 0,
                              "paid_back": true,
                              "payment_type": 0,
                              "price": 0
                            }
                          ]
                        }
                      ],
                      "trip_price_changes": [
                        {
                          "id": 0,
                          "price_delta": 0,
                          "created_at": "2019-08-24T14:15:22Z",
                          "driver_tag": 0,
                          "trip_financials_id": 0,
                          "trip_datetime": 0
                        }
                      ],
                      "withdrawals": [
                        {
                          "id": 0,
                          "created_at": "2019-08-24T14:15:22Z",
                          "amount": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "invalid_period"
          }
        },
        "operationId": "get-accounting-client-transactions"
      }
    },
    "/registration/driver": {
      "post": {
        "summary": "PotentialDriverRegistration",
        "tags": [
          "Registration"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "operationId": "post-registration-driver-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "integer"
                  },
                  "interview_date": {
                    "type": "string",
                    "format": "date",
                    "description": "set today as default value"
                  },
                  "refrence_type": {
                    "type": "string",
                    "enum": [
                      "restaurant",
                      "divar",
                      "sheypoor",
                      "newspaper",
                      "telegram",
                      "in_person",
                      "other"
                    ],
                    "description": "in recruitment panel it is set by recruiter but in restaurant panel should be set to restaurant"
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "phone_number",
                  "interview_date",
                  "refrence_type"
                ]
              }
            }
          }
        }
      },
      "parameters": [],
      "get": {
        "summary": "",
        "operationId": "get-registration-driver",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "courses_count": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "followup_date": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date"
                      },
                      "interview_date": {
                        "type": "string",
                        "format": "date"
                      },
                      "max_visible_courses_count": {
                        "type": "integer",
                        "default": 0
                      },
                      "phone_number": {
                        "type": "integer"
                      },
                      "recruiter": {
                        "$ref": "#/components/schemas/User"
                      },
                      "reference_type": {
                        "type": "string",
                        "enum": [
                          "in_person",
                          "telegram",
                          "divar",
                          "sheypoor",
                          "restaurant",
                          "newspaper",
                          "other"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "new",
                          "hired",
                          "expired",
                          "calling",
                          "unemployable",
                          "declined_by_applicant",
                          "rejected_in_interview",
                          "wrong_information",
                          "form_completion",
                          "waiting_for_presence",
                          "fired",
                          "working",
                          "lack_of_tools",
                          "line_blocked",
                          "presence_as_soon_as_possible",
                          "thinking",
                          "call_from_applicant",
                          "call_from_miare"
                        ],
                        "description": "if driver is hired status is hired, if driver is not hired after 8 days the status will be expired"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trip-management/staff-api/trips/{tripID}/reassign-driver/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "tripID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Reassign Driver",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "operationId": "post-trip-management-staff-api-trips-tripID-reassign-driver"
      }
    },
    "/api/otp/driver/request/": {
      "post": {
        "summary": "driver-request-otp",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-otp-driver-request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "phone_number"
                ]
              }
            }
          }
        }
      }
    },
    "/api/otp/driver/submit/": {
      "post": {
        "summary": "driver-submit-otp",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "minLength": 1
                    },
                    "registration_completed": {
                      "type": "boolean",
                      "description": "Shows whether the self-declarated data by the driver is accepted"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-otp-driver-submit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "key"
                ]
              }
            }
          }
        }
      }
    },
    "/api/registration/drivers/personal-info/": {
      "post": {
        "summary": "update-or-create-personal-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationPersonalInfo"
                }
              }
            }
          }
        },
        "operationId": "post-api-registration-drivers-personal-info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationPersonalInfo"
              }
            }
          }
        }
      },
      "get": {
        "summary": "get-personal-info",
        "operationId": "get-api-registration-drivers-personal-info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationPersonalInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/registration/drivers/contact-info/": {
      "post": {
        "summary": "update-or-create-contact-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationContactInfo"
                }
              }
            }
          }
        },
        "operationId": "post-api-registration-drivers-contact-info",
        "description": "Used to update contact info of drivers during self-declared registration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationContactInfo"
              }
            }
          }
        }
      },
      "get": {
        "summary": "get-create-contact-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationContactInfo"
                }
              }
            }
          }
        },
        "operationId": "get-api-registration-drivers-contact-info"
      }
    },
    "/api/registration/drivers/identity-docs/": {
      "get": {
        "summary": "get-identity-docs",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityDoc"
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-api-registration-drivers-identity-docs"
      },
      "post": {
        "summary": "update-or-create-identity-docs",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityDoc"
                }
              }
            }
          }
        },
        "operationId": "post-api-registration-drivers-identity-docs",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "driving_license": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "examples": {}
            }
          }
        }
      }
    },
    "/api/registration/drivers/bike-info/": {
      "get": {
        "summary": "get-bike-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationBikeInfo"
                }
              }
            }
          }
        },
        "operationId": "get-api-registration-drivers-bike-info"
      },
      "post": {
        "summary": "update-or-create-bike-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationBikeInfo"
                }
              }
            }
          }
        },
        "operationId": "post-api-registration-drivers-bike-info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationBikeInfo"
              }
            }
          }
        }
      }
    },
    "/api/registration/drivers/experience-info/": {
      "get": {
        "summary": "get-experience-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationExperienceInfo"
                }
              }
            }
          }
        },
        "operationId": "get-api-registration-drivers-experience-info"
      },
      "post": {
        "summary": "update-or-create-experience-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationExperienceInfo"
                }
              }
            }
          }
        },
        "operationId": "post-api-registration-drivers-experience-info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationExperienceInfo"
              }
            }
          }
        }
      }
    },
    "/api/registration/drivers/overview/": {
      "get": {
        "summary": "registration-overview",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "personal_info_status": {
                      "type": "string",
                      "enum": [
                        "no_data",
                        "approved",
                        "rejected",
                        "pending_for_review"
                      ]
                    },
                    "contact_info_status": {
                      "type": "string",
                      "enum": [
                        "no_data",
                        "aproved",
                        "rejected",
                        "pending_for_review"
                      ]
                    },
                    "identity_docs_status": {
                      "type": "string",
                      "enum": [
                        "no_data",
                        "approved",
                        "rejected",
                        "pending_for_review"
                      ]
                    },
                    "bike_info_status": {
                      "type": "string",
                      "enum": [
                        "no_data",
                        "approved",
                        "rejected",
                        "pending_for_review"
                      ]
                    },
                    "experience_info_status": {
                      "type": "string",
                      "enum": [
                        "no_data",
                        "approved",
                        "rejected",
                        "pending_for_review"
                      ]
                    },
                    "complementary_info_status": {
                      "type": "string",
                      "enum": [
                        "no_data",
                        "approved",
                        "rejected",
                        "pending_for_review"
                      ]
                    },
                    "driver_id": {
                      "type": "integer"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-registration-drivers-overview",
        "description": "Shows whether the self-declared data from driver are verified by the firm or not"
      }
    },
    "/api/registration/recruiters/complementary-info/{driver_id}/submit/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "driver_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "update-or-create-complementary-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "national_card_url": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "avatar_url": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "promissory_serial": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "minLength": 6,
                      "maxLength": 6
                    },
                    "box_payment_type": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "minLength": 1,
                      "enum": [
                        "shetab",
                        "cash"
                      ]
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "post-api-registration-field-staff-complementary-info-driver_id",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "promissory_serial",
                      "box_payment_type"
                    ],
                    "properties": {
                      "promissory_serial": {
                        "type": "string",
                        "minLength": 6,
                        "maxLength": 6
                      },
                      "box_payment_type": {
                        "type": "string",
                        "minLength": 1,
                        "enum": [
                          "shetab",
                          "cash"
                        ]
                      }
                    }
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  },
                  "national_card": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "data",
                  "avatar",
                  "national_card"
                ]
              }
            }
          },
          "description": ""
        },
        "parameters": []
      },
      "get": {
        "summary": "get-complementary-info",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DriverComplementaryInfoForRead"
                }
              }
            }
          }
        },
        "operationId": "get-api-registration-field-staff-complementary-info-driver_id"
      }
    },
    "/api/registration/recruiters/{info_section}/{driver_id}/review/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "driver_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "enum": [
              "bike-info",
              "personal-info",
              "contact-info",
              "experience-info",
              "identity-docs"
            ]
          },
          "name": "info_section",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "review-info-from-recruiters",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (when the given info for the driver is not completed yet)"
          },
          "404": {
            "description": "Not Found (when the driver or the info section is not found)"
          }
        },
        "operationId": "post-api-registration-field-staff-verify-driver_id-info_section",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "approved_by_recruiter": {
                    "type": "boolean",
                    "description": "`false` if rejected"
                  }
                },
                "required": [
                  "approved_by_recruiter"
                ]
              }
            }
          }
        }
      }
    },
    "/api/registration/recruiters/{info_section}/{driver_id}/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "driver_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "enum": [
              "bike-info",
              "personal-info",
              "experience-info",
              "identity-docs",
              "contact-info"
            ]
          },
          "name": "info_section",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "get-info-from-recruiters",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RegistrationPersonalInfo"
                    },
                    {
                      "$ref": "#/components/schemas/RegistrationBikeInfo"
                    },
                    {
                      "$ref": "#/components/schemas/RegistrationExperienceInfo"
                    },
                    {
                      "$ref": "#/components/schemas/RegistrationContactInfo"
                    },
                    {
                      "$ref": "#/components/schemas/IdentityDoc"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-api-registration-field-staff-driver_id-form-name"
      }
    },
    "/api/registration/drivers/{driver_id}/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "driver_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "get-information-data",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bike_info": {
                      "$ref": "#/components/schemas/RegistrationBikeInfo"
                    },
                    "personal_info": {
                      "$ref": "#/components/schemas/RegistrationPersonalInfo"
                    },
                    "contact_info": {
                      "$ref": "#/components/schemas/RegistrationContactInfo"
                    },
                    "experience_info": {
                      "$ref": "#/components/schemas/RegistrationExperienceInfo"
                    },
                    "identity_docs": {
                      "$ref": "#/components/schemas/IdentityDoc"
                    },
                    "complementary_info": {
                      "$ref": "#/components/schemas/DriverComplementaryInfoForRead"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-registration-staff-driver_id"
      }
    },
    "/api/registration/staff/{info_section}/{driver_id}/review/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "driver_id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string",
            "enum": [
              "bike-info",
              "personal-info",
              "identity-docs",
              "experience-info",
              "contact-info"
            ]
          },
          "name": "info_section",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "review-info-from-staff",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (When the info has not been approved by the recruiter staff yet)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "recruiter_not_approved"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (When the there is no info submitted)"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "duplicate_national_id"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-registration-staff-approve-driver_id-info_section",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_approved": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "description": "Required only if `is_approved` is `False`"
                  }
                },
                "required": [
                  "is_approved"
                ]
              }
            }
          }
        }
      }
    },
    "/api/accounting/recruiters/info/": {
      "get": {
        "summary": "recruiters-info",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "has_approval_permission": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-accounting-recruiters-info"
      }
    },
    "/api/registration/drivers/": {
      "get": {
        "summary": "registring-drivers-list",
        "tags": [
          "Registration"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "next": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "previous": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RegistrationOverview"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-registrations-driver",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "phone",
            "description": "Filters the `results` if the driver's phone contains queried phone"
          }
        ],
        "description": ""
      },
      "parameters": []
    },
    "/api/monitoring/staff-request-driver-devices-bug-report/{driver_id}/": {
      "post": {
        "summary": "Staff Request Driver Devices Bug Report",
        "tags": [
          "notifications"
        ],
        "responses": {
          "201": {
            "description": "Created Notification object, stored it, and sent it."
          },
          "404": {
            "description": "Not Found (driver_id)"
          }
        },
        "operationId": "post-api-monitoring-staff-driver-request-report",
        "description": "This endpoint is for Staff(IsAdmin) members only. It is used to find the desired driver and therefore mobile devices of that driver, and then send notification to those devices stating that they should send the bug report file. The notification is sent using GCM; For notification data format refer to `staging-miare-v2.1.0.json/components/schemas/Notification`'s `bug-report-example`.\n\nNote that `message` is not an empty string only when the Staff has included their report description in the body of the request.",
        "security": [
          {
            "auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_description": {
                    "type": "string",
                    "description": "The additional report that Staff might include."
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "request_description": "گزارش احتمالی اضافه شده توسط پشتیبانی"
                  }
                }
              }
            }
          },
          "description": "If there is a probable description that the Staff might want to include, it is in the body of the POST request."
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "driver_id",
          "in": "path",
          "required": true,
          "description": "The primary-key of the driver in Driver db-table."
        }
      ]
    },
    "/api/monitoring/upload-driver-device-bug-report/": {
      "post": {
        "summary": "Upload Driver Device Bug Report",
        "tags": [
          "notifications"
        ],
        "responses": {
          "201": {
            "description": "Created DriverDeviceReport record."
          },
          "400": {
            "description": "Bad Request. Invalid file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "report_file": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "code": {
                      "type": "object",
                      "properties": {
                        "report_file": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "detail": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "django-rest-framework invalid-file-error response-details": {
                    "value": {
                      "report_file": [
                        "ErrorDetail(string='The submitted data was not a file. Check the encoding type on the form.', code='invalid')"
                      ],
                      "code": {
                        "report_file": [
                          "invalid"
                        ]
                      },
                      "detail": "{'report_file': [ErrorDetail(string='The submitted data was not a file. Check the encoding type on the form.', code='invalid')], 'code': {'report_file': ['invalid']}}"
                    }
                  }
                }
              }
            }
          },
          "417": {
            "description": "Expectation Failed. Key report_file not included in body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "reason": "Key report_file was not found in request body."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-monitoring-upload-driver-report",
        "description": "This endpoint is for Couriers(IsDriver) only. It should be used to upload the bug report file from a driver's device client. Because the form data contains a file and it might be large, HTTP POST request should be submitted in a multipart manner.\n\nNote that there is `no` file-type limitation, but there is file validation.\nAlso Note that the endpoint has been tested only with an image file.",
        "security": [
          {
            "auth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "report_file": {
                    "type": "string"
                  }
                }
              },
              "examples": {}
            }
          },
          "description": "Body must contain 'report_file' which must be a file."
        }
      },
      "parameters": []
    },
    "/api/assign/drivers/presence-intervals/": {
      "get": {
        "summary": "Driver Presence Intervals",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PresenceIntervalItem"
                  }
                },
                "examples": {
                  "example (limited to 2 days)": {
                    "value": [
                      {
                        "date": "2020-01-01",
                        "start_time": "11:30",
                        "end_time": "11:45",
                        "present": true,
                        "presence_duration": "P0DT00H09M00.159056S"
                      },
                      {
                        "date": "2020-01-01",
                        "start_time": "15:30",
                        "end_time": "15:45",
                        "present": false,
                        "presence_duration": "P0DT00H10M00.159056S"
                      },
                      {
                        "date": "2020-01-02",
                        "start_time": "11:30",
                        "end_time": "11:45",
                        "present": true,
                        "presence_duration": "P0DT00H09M00.159056S"
                      },
                      {
                        "date": "2020-01-02",
                        "start_time": "15:30",
                        "end_time": "15:45",
                        "present": true,
                        "presence_duration": "P0DT00H09M00.159056S"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-assign-drivers-presence-intervals",
        "description": "Serializes a list of presence intervals within past 10 days with the state of being present or not"
      }
    },
    "/notification/{pk}/delivered/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "pk",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Notification Delivery Time",
        "tags": [
          "notifications"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "post-notification-pk-delivered"
      }
    },
    "/notification/{pk}/dismissed/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "pk",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Notification Dismiss Time",
        "tags": [
          "notifications"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "post-notification-pk-dismissed"
      }
    }
  },
  "security": [
    {
      "auth": []
    }
  ]
}
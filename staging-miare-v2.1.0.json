{
  "openapi": "3.0.0",
  "info": {
    "description": "This is Miare Third-Party API, designed to enable registered Miare users to integrate our delivery services into their applications.",
    "version": "2.1.0",
    "title": "Miare",
    "contact": {
      "email": "sazary@miare.ir"
    }
  },
  "tags": [
    {
      "name": "delivery",
      "description": "Delivery related services"
    },
    {
      "name": "events",
      "description": "Realtime webhook events"
    },
    {
      "name": "accounting",
      "description": "Accounting related services"
    },
    {
      "name": "reservation",
      "description": "Driver's reservation services"
    },
    {
      "name": "notifications"
    }
  ],
  "servers": [
    {
      "url": "https://ws.mia.re/trip-management/third-party-api/v2",
      "description": "3rd Party"
    },
    {
      "url": "https://staging.ws.mia.re/trip-management/third-party-api/v2",
      "description": "3rd Party - Staging"
    },
    {
      "url": "https://www.mia.re/api",
      "description": "Django API"
    },
    {
      "url": "https://www.staging.mia.re/api",
      "description": "Django API - Staging"
    },
    {
      "description": "Go API - staging",
      "url": "https://staging.ws.mia.re"
    },
    {
      "url": "https://staging.ws.mia.re/staff-api",
      "description": "Go Staff API - staging"
    }
  ],
  "components": {
    "securitySchemes": {
      "auth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "Trip": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique ID of this trip",
            "example": "wpeiru0p-qefq-32pf-nvld-hr9er9dfjas2"
          },
          "area": {
            "$ref": "#/components/schemas/Area"
          },
          "state": {
            "type": "string",
            "description": "Current state of this trip",
            "example": "pickup",
            "enum": [
              "assign_queue",
              "pickup",
              "dropoff",
              "delivered",
              "canceled_by_miare",
              "canceled_by_client"
            ]
          },
          "pickup": {
            "$ref": "#/components/schemas/Pickup"
          },
          "courses": {
            "type": "array",
            "description": "All of the different courses at which parts of this trip should be dropped off",
            "xml": {
              "name": "course",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The exact moment at which this trip is created for the first time",
            "example": "2019-04-12T13:58:42+0000"
          },
          "assigned_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time this trip was assigned to its current courier",
            "example": "2019-04-12T13:59:59+0000"
          },
          "picked_up_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the courier picked up the items from pickup location",
            "example": "2019-04-12T14:10:42+0000"
          },
          "courier": {
            "$ref": "#/components/schemas/Courier"
          },
          "test_mode": {
            "type": "boolean",
            "description": "Whether or not this trip was created in test mode",
            "example": false
          }
        },
        "xml": {
          "name": "Trip"
        },
        "x-examples": {}
      },
      "DriverAllocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The id of serialized allocation",
            "example": 3
          },
          "area_name": {
            "type": "string",
            "description": "The name of area related to the allocation",
            "example": "فردوس شرقی"
          },
          "priority": {
            "type": "number",
            "description": "The priority of allocation, the greater value has higher priority",
            "example": 10,
            "enum": [
              10,
              20
            ]
          },
          "starting_date": {
            "type": "string",
            "format": "date",
            "description": "Inclusive date which allocation is valid from",
            "example": "2020-01-19"
          },
          "expired_at": {
            "type": "string",
            "format": "date",
            "description": "Exclusive date which allocation is valid until",
            "example": "2020-01-20",
            "nullable": true
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "description": "The start time of related Interval to the allocation",
            "example": "11:30:00"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "description": "The end time of related Interval to the allocation",
            "example": "11:30:00"
          }
        },
        "xml": {
          "name": "Allocation"
        }
      },
      "Pickup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The human readable name of the pickup",
            "example": "رستوران بزرگمهر"
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number associated with the source which will be used by courier and support staffs in order to contact to pickup if necessary",
            "example": "0212345678"
          },
          "address": {
            "type": "string",
            "description": "The human readable address of the source, preferably down to every necessary detail for a human to find the source quickly",
            "example": "تهران، صادقیه، بلوار آیت الله کاشانی"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "A valid URL which points to an image file which should be the logo of the pickup. This image will be used in both support panel, and courier’s application, so make sure that the URL is both reachable and is configured to allow CORS requests",
            "example": "https://example.com/restaurants/bm_logo.png"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "description": "The time that you expect the courier to arrive at the pickup, so optimally it should be the time package content is ready and packaged",
            "example": "2019-04-12T14:12:00+0000"
          }
        },
        "xml": {
          "name": "Pickup"
        }
      },
      "Course": {
        "type": "object",
        "required": [
          "bill_number",
          "name",
          "phone_number",
          "address"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of this course",
            "example": "wpeiru0p-qefq-32pf-nvld-hr9er9dfjas2"
          },
          "bill_number": {
            "type": "string",
            "description": "An string field left for you to store sort of a human readable bill number in it which will be used as a reference point among our support team, you and the pickup staffs",
            "example": "DEL-119"
          },
          "name": {
            "type": "string",
            "description": "Name of the dropp-off",
            "example": "علی علوی"
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number associated with the drop-off which will be used by courier and support staffs in order to contact to them if necessary",
            "example": "09123456789"
          },
          "address": {
            "type": "string",
            "description": "The human readable drop-off address, preferably down to every necessary detail for a human to find it quickly",
            "example": "هران، خیابان استاد معین، پلاک ۱۲"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "manifest_items": {
            "type": "array",
            "xml": {
              "name": "manifest_item",
              "wrapped": true
            },
            "description": "The contents of the package to be delivered to the drop-off",
            "items": {
              "$ref": "#/components/schemas/ManifestItem"
            }
          },
          "tracking_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of Miare Tracking webpage which can be given to user so he/she can follow the courier in real-time",
            "example": "https://mia.re/t/73c939d1/"
          },
          "dropped_off_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time this course was dropped off by courier",
            "example": "2019-04-12T14:06:42+0000"
          }
        },
        "xml": {
          "name": "Course"
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "example": "35.737004"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": "51.413569"
          }
        },
        "xml": {
          "name": "Location"
        }
      },
      "ManifestItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human readable name of the content which will be verified by courier",
            "example": "پیتزا پپرونی خانواده"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "The quanitiy of the given item",
            "example": 2
          }
        },
        "xml": {
          "name": "ManifestItem"
        }
      },
      "Area": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of area",
            "example": "59"
          },
          "name": {
            "type": "string",
            "description": "Textual name of the area",
            "example": "فردوس شرق"
          }
        },
        "xml": {
          "name": "Area"
        }
      },
      "Courier": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the driver",
            "example": "علی لطفی"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "A photo of the courier",
            "example": "https://files.miare.ir/avatars/gheuIej.jpg"
          }
        },
        "xml": {
          "name": "Courier"
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier of this payment",
            "example": 2
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Amount of this payment, in IRT",
            "example": 2000
          },
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which this payment has been submitted",
            "example": "2019-04-12T13:58:42+0000"
          }
        },
        "xml": {
          "name": "Payment"
        }
      },
      "Order": {
        "type": "object",
        "xml": {
          "name": "Order"
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier",
            "example": 2
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Amount of this order, in IRT",
            "example": 2000
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which this order has been created",
            "example": "2019-04-12T13:58:42+0000"
          },
          "description": {
            "type": "string",
            "description": "Human readable description of the order",
            "example": "رزرو شیفت دوشنبه شب"
          },
          "payment": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Payment"
              },
              {
                "type": "null"
              }
            ]
          },
          "items": {
            "type": "array",
            "description": "Items of this order",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "expired_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "The event being reported",
            "enum": [
              "added",
              "assigned",
              "course_added",
              "course_deleted",
              "picked_up",
              "course_dropped_off",
              "delivered",
              "canceled_by_client",
              "canceled_by_miare"
            ]
          },
          "trip": {
            "$ref": "#/components/schemas/Trip"
          }
        },
        "xml": {
          "name": "Event"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Constant error code",
            "example": "trip_not_found"
          },
          "detail": {
            "type": "string",
            "description": "Human readable explanation of the error",
            "example": "Could not find trip with id \"wrong_id\""
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "description": "Represents the problem choosable for Issue",
        "type": "object",
        "x-examples": {
          "example": {
            "id": 1,
            "title": "آدرس را نمی‌شناسم",
            "category": {
              "id": 1,
              "title": "عدم امکان تکمیل سفر",
              "auto_revoke_on_create": false
            }
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/ProblemCategory"
          }
        }
      },
      "ProblemCategory": {
        "title": "ProblemCategory",
        "type": "object",
        "x-examples": {
          "example": {
            "id": 1,
            "title": "عدم امکان تکمیل سفر",
            "auto_revoke_on_create": false
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "auto_revoke_on_create": {
            "type": "boolean"
          }
        }
      },
      "DriverPlan": {
        "title": "DriverPlan",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "assign_weight": {
            "type": "number"
          },
          "type": {
            "type": "integer"
          },
          "intervals": {
            "type": "array",
            "items": {}
          },
          "max_acceptable_absence_hours": {
            "type": "integer"
          },
          "min_acceptable_courses_count": {
            "type": "integer"
          },
          "reservable": {
            "type": "boolean",
            "description": "Determins if the plan has the same type of Platinum"
          },
          "max_allowed_intervals_per_day": {
            "type": "integer"
          }
        }
      },
      "Notification": {
        "title": "Notification",
        "type": "object",
        "x-examples": {
          "message-example": {
            "message_type": "message",
            "payload": {
              "id": 1,
              "title": "مازاد درآمد",
              "message": "تبریک! شما مشمول مازاد درآمد شدید",
              "image": null
            }
          },
          "ticket-example": {
            "message_type": "ticket",
            "payload": {
              "id": 2,
              "title": "پاسخ برای تیکت",
              "message": "شما یک پیام خوانده نشده دارید، لطفا در اولین فرصت بخش تیکت‌ها در برنامه «میاره» را مشاهده نمائید.",
              "image": null
            }
          }
        },
        "description": "Represents the data format of serialized message over GCM",
        "properties": {
          "message_type": {
            "type": "string",
            "enum": [
              "message",
              "ticket"
            ]
          },
          "payload": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uri"
              }
            }
          }
        }
      },
      "DriverArea": {
        "title": "DriverArea",
        "type": "object",
        "x-examples": {
          "example": {
            "type": "Feature",
            "geometry": {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    51.410995423278784,
                    35.75178947678033
                  ],
                  [
                    51.41437601058966,
                    35.75236448783447
                  ],
                  [
                    51.41608289947508,
                    35.75241707766311
                  ],
                  [
                    51.41783270370476,
                    35.75171215711329
                  ],
                  [
                    51.41996874603275,
                    35.75069377287796
                  ],
                  [
                    51.41975,
                    35.75898
                  ],
                  [
                    51.4213585423279,
                    35.764430621902875
                  ],
                  [
                    51.421853967914565,
                    35.76584161592507
                  ],
                  [
                    51.42770366539005,
                    35.775432270258094
                  ],
                  [
                    51.427215302963305,
                    35.77935129337725
                  ],
                  [
                    51.4220116170884,
                    35.785208827223016
                  ],
                  [
                    51.41961352184293,
                    35.78923397961277
                  ],
                  [
                    51.415976045646616,
                    35.79079819176944
                  ],
                  [
                    51.410919680881534,
                    35.779561982767575
                  ],
                  [
                    51.41210702117913,
                    35.77346182827735
                  ],
                  [
                    51.40970771163936,
                    35.76051262997255
                  ],
                  [
                    51.40944746378896,
                    35.757159687273045
                  ],
                  [
                    51.410136661376974,
                    35.7559546866528
                  ],
                  [
                    51.41051874603269,
                    35.75426535475744
                  ],
                  [
                    51.410995423278784,
                    35.75178947678033
                  ]
                ]
              ]
            },
            "properties": {
              "id": 17,
              "name": "جردن",
              "manual_assign_enabled": false
            }
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Feature"
            ],
            "example": "Feature"
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "manual_assign_enabled": {
                "type": "boolean"
              }
            }
          },
          "geometry": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Polygon"
                ],
                "example": "Polygon"
              },
              "coordinates": {
                "type": "array",
                "minItems": 1,
                "maxItems": 1,
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "items": {
                      "type": "number",
                      "exclusiveMinimum": false,
                      "exclusiveMaximum": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TripInDailyKPI": {
        "title": "TripInDailyKPI",
        "type": "object",
        "x-tags": [
          "accounting"
        ],
        "x-examples": {
          "example": {
            "request_datetime": "2020-01-15T11:45:23.484003+03:30",
            "assign_datetime": "2020-01-15T11:45:53.264385+03:30",
            "id": 1724657,
            "courses": [
              {
                "id": 2630921,
                "end_datetime": "2020-01-15T12:03:11+03:30",
                "radial_end_to_end_distance": 0.009783316341434355,
                "is_long": false
              }
            ],
            "course_bonuses": [],
            "source_title": "فودکورت لوکال‌هاست",
            "is_round_trip": true,
            "end_datetime": "2020-01-15T12:03:21+03:30",
            "raw_salary": 15500
          }
        },
        "description": "",
        "properties": {
          "request_datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-15T11:45:23.484003+03:30"
          },
          "assign_datetim": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-15T11:45:23.484003+03:30"
          },
          "courses": {
            "type": "array",
            "items": {}
          },
          "id": {
            "type": "integer",
            "example": 1724657
          },
          "course_bonuses": {
            "type": "array",
            "items": {}
          },
          "source_title": {
            "type": "string",
            "example": "فودکورت لوکال‌هاست"
          },
          "is_round_trip": {
            "type": "boolean"
          },
          "end_datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-15T12:03:21+03:30"
          },
          "raw_salary": {
            "type": "integer"
          }
        }
      },
      "Absence": {
        "title": "Absence",
        "type": "object",
        "x-tags": [
          "accounting",
          "delivery"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "start_datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-15T16:01:48.265866+03:30"
          },
          "end_datetime": {
            "type": "string",
            "example": "2020-01-15T16:01:48.265866+03:30"
          },
          "status": {
            "type": "boolean"
          },
          "tag": {
            "type": "integer",
            "enum": [
              0,
              10,
              20
            ],
            "example": 10
          },
          "comment": {
            "type": "string"
          }
        },
        "x-examples": {
          "example": {
            "id": 12838542,
            "start_datetime": "2020-01-15T16:01:48.265866+03:30",
            "end_datetime": "2020-01-15T17:30:00+03:30",
            "status": false,
            "tag": 20,
            "comment": ""
          }
        }
      },
      "DriverZone": {
        "title": "DriverZone",
        "type": "object",
        "x-examples": {
          "example": {}
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "explanation": {
            "type": "string"
          }
        }
      },
      "DriverActivityZone": {
        "title": "DriverActivityZone",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "driver": {
            "$ref": "#/components/schemas/Driver"
          },
          "zone": {
            "$ref": "#/components/schemas/DriverZone"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Driver": {
        "title": "Driver",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "$ref": ""
          },
          "national_id": {
            "type": "integer"
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "available": {
            "type": "boolean"
          },
          "present_at_shift_start": {
            "type": "boolean"
          },
          "busy": {
            "type": "boolean"
          },
          "phone": {
            "type": "integer"
          },
          "quit_date": {
            "type": "string",
            "format": "date"
          },
          "quit_type": {
            "type": "integer"
          },
          "quit_reason": {
            "type": "string"
          },
          "rating": {
            "type": [
              "string",
              "integer"
            ]
          },
          "is_suspended": {
            "type": "boolean"
          },
          "suspension_date": {
            "type": "string",
            "format": "date"
          },
          "tags": {
            "$ref": "#/components/schemas/DriverTag"
          }
        }
      },
      "DriverTag": {
        "title": "DriverTag",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "OrderItem": {
        "title": "OrderItem",
        "type": "object",
        "x-examples": {},
        "description": "Describes each row of an Order object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "type": "integer"
          },
          "interval_areas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "interval": {
                  "$ref": "#/components/schemas/Interval"
                },
                "area": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DailyKPI": {
        "title": "DailyKPI",
        "type": "object",
        "properties": {
          "absence_seconds": {
            "type": "integer"
          },
          "absences": {
            "type": "array",
            "items": {}
          },
          "bonus_courses_count": {
            "type": "integer"
          },
          "courses_count": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "long_courses_count": {
            "type": "integer"
          },
          "round_trips_count": {
            "type": "integer"
          },
          "trips_count": {
            "type": "integer"
          }
        }
      },
      "Interval": {
        "title": "Interval",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "start_time": {
            "type": "string",
            "format": "time"
          },
          "end_time": {
            "type": "string",
            "format": "time"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "is_staff": {
            "type": "boolean"
          },
          "user_name": {
            "type": "string"
          }
        },
        "x-examples": {}
      },
      "Issue": {
        "title": "Issue",
        "type": "object",
        "description": "",
        "x-examples": {
          "example": {
            "description": "پاره‌ای از توضیحات",
            "driver_id": 5,
            "id": 123,
            "problem": null,
            "reported_at": "2020-07-22T13:37:51+0430",
            "resolved_at": null,
            "trip_id": 1769145,
            "picked_by": {
              "id": 6067,
              "user_name": "a1b2c3",
              "is_staff": true,
              "first_name": "John",
              "last_name": "Smith"
            }
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "driver_id": {
            "type": [
              "integer",
              "null"
            ]
          },
          "trip_id": {
            "type": "integer"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "problem": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              }
            }
          },
          "reported_at": {
            "type": "string"
          },
          "resolved_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "picked_by": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null",
                "properties": {}
              }
            ]
          }
        }
      },
      "StaticContent": {
        "title": "StaticContent",
        "type": "object",
        "description": "Represents a model keeping static contents on the file server",
        "x-examples": {
          "example": {
            "id": 1,
            "name": "v1",
            "file_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B1.JPG"
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "The name which the staff has entered while saving the record"
          },
          "file_url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Reward": {
        "title": "BalanceModification",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "amount": {
            "type": "integer",
            "description": "Negative for Punishments, Positive for Rewards"
          },
          "reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/BalanceModificationType"
          }
        }
      },
      "BalanceModificationType": {
        "title": "BalanceModificationType",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Referral": {
        "title": "Referral",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the referrer"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the referrer"
          },
          "driver": {
            "type": "object",
            "description": "The driver who is referred",
            "properties": {
              "id": {
                "type": "integer"
              },
              "avatar": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "is_suspended": {
                "type": "boolean"
              },
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "payment_amount": {
            "type": "integer"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Debt": {
        "title": "DebtItem",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "paid": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "dabt_info": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "total_amount": {
                "type": "integer"
              },
              "total_installments": {
                "type": "integer"
              },
              "payment_start_date": {
                "type": "string",
                "format": "date"
              },
              "return_at_quit": {
                "type": "boolean"
              },
              "type": {
                "$ref": "#/components/schemas/BalanceModificationType"
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "EventBody": {
        "description": "Event happened for a trip",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/trips/": {
      "post": {
        "tags": [
          "delivery"
        ],
        "summary": "Creates a new trip and puts it in the assign queue",
        "description": "Note that trip creation will fail if you don't have enough concurrency limit in the area of the pickup location of the given trip.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pickup": {
                    "$ref": "#/components/schemas/Pickup"
                  },
                  "courses": {
                    "type": "array",
                    "xml": {
                      "name": "course",
                      "wrapped": true
                    },
                    "items": {
                      "$ref": "#/components/schemas/Course"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in trip creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "parse_error",
                        "invalid_request_body",
                        "concurrency_limit"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/trips/{trip_id}/cancel/": {
      "post": {
        "tags": [
          "delivery"
        ],
        "summary": "Cancels the given trip",
        "description": "Note that a trip CANNOT be cancelled when it has passed 30 seconds since we’ve assigned it to a courier or the courier has already arrived at the source. In special cases which you still need to cancel the trip, please contact our support.",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "description": "The ID of the trip to be cancelled",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully cancelled trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in trip cancellation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "parse_error",
                        "invalid_request_body",
                        "canceling_ended_trip",
                        "invalid_state_change",
                        "canceling_arrived_trip",
                        "canceling_after_deadline"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/trips/{trip_id}/courses/": {
      "post": {
        "tags": [
          "delivery"
        ],
        "summary": "Add a course to the given trip",
        "description": "Note that you cannot add a course to an already picked up trip.",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "description": "The ID of the trip to add a course to",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bill_number",
                  "name",
                  "phone_number",
                  "address"
                ],
                "properties": {
                  "bill_number": {
                    "type": "string",
                    "description": "An string field left for you to store sort of a human readable bill number in it which will be used as a reference point among our support team, you and the pickup staffs",
                    "example": "DEL-119"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the dropp-off",
                    "example": "علی علوی"
                  },
                  "phone_number": {
                    "type": "string",
                    "description": "The phone number associated with the drop-off which will be used by courier and support staffs in order to contact to them if necessary",
                    "example": "09123456789"
                  },
                  "address": {
                    "type": "string",
                    "description": "The human readable drop-off address, preferably down to every necessary detail for a human to find it quickly",
                    "example": "هران، خیابان استاد معین، پلاک ۱۲"
                  },
                  "location": {
                    "$ref": "#/components/schemas/Location"
                  },
                  "manifest_items": {
                    "type": "array",
                    "xml": {
                      "name": "manifest_item",
                      "wrapped": true
                    },
                    "description": "The contents of the package to be delivered to the drop-off",
                    "items": {
                      "$ref": "#/components/schemas/ManifestItem"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added a course to the trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in adding the course",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "parse_error",
                        "invalid_request_body"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/courses/{course_id}/": {
      "delete": {
        "tags": [
          "delivery"
        ],
        "summary": "Removes the given course from its trip",
        "description": "Note you cannot remove an alreay picked up course.",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "description": "The ID of the course to be removed",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the course",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in coures removal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "parse_error",
                        "invalid_request_body"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscribe/": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Callbacks made by our server",
        "description": "There are different callbacks which will be made in different lifetime stages of a trip. All of them will be sent to the webhook address you’ve provided to the technical team. All of them will contain credential token as a HTTP header as described in the Authentication section and a `X-Miare-API-Version` header indicating the version of API in which the Event’s format will be.",
        "responses": {
          "default": {
            "description": "This is just a placeholder for events"
          }
        },
        "callbacks": {
          "event": {
            "your_webhook_url": {
              "post": {
                "requestBody": {
                  "$ref": "#/components/requestBodies/EventBody"
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounting/drivers/current-allocations/": {
      "get": {
        "tags": [
          "accounting"
        ],
        "summary": "Fetch current requester allocations",
        "description": "This endpoint is implemented for drivers to see their active allocations within last and next 29 minutes",
        "servers": [
          {
            "url": "https://www.staging.mia.re"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched current allocations of driver",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DriverAllocation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/accounting/drivers/week-allocations/": {
      "get": {
        "tags": [
          "accounting"
        ],
        "summary": "Fetch current week requester allocations",
        "description": "This endpoint is implemented for drivers to see their allocations, active during current week",
        "servers": [
          {
            "url": "https://www.staging.mia.re"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched current allocations of driver",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DriverAllocation"
                  }
                },
                "examples": {}
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/accounting/drivers/upcoming-allocation/": {
      "get": {
        "tags": [
          "accounting"
        ],
        "summary": "Fetch first upcoming or ongoing allocation of requester driver",
        "description": "This endpoint is implemented for drivers to see their current or the first next allocation.",
        "servers": [
          {
            "url": "https://www.staging.mia.re"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched first upcoming allocation of driver",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DriverAllocation"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/ws/drivers/": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Documented events which may occure in a driver websocket connection",
        "description": "These are only the events related to closing connecitopn of driver. ",
        "responses": {
          "default": {
            "description": ""
          },
          "x-4000": {
            "description": "Driver connection closes with this code when it is recognized as duplicate connection after auth message received."
          },
          "x-4005": {
            "description": "Driver connection closes with this code when the driver's allocation is ended."
          },
          "x-4010": {
            "description": "Driver connection closes with this code when the newly authenticated driver has no active allocation."
          },
          "x-4015": {
            "description": "Driver connection closes with this code when gets suspended."
          }
        }
      }
    },
    "/reservation/orders/": {
      "get": {
        "tags": [
          "reservation"
        ],
        "summary": "Orders that have been placed to reserve shifts",
        "description": "These orders are all of orders that this driver have placed, whether they've been paid or not.",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "successful",
                "pending"
              ]
            },
            "required": true,
            "description": "Which type of orders do we want to fetch"
          },
          {
            "in": "query",
            "name": "from_date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Only fetch orders from this date"
          },
          {
            "in": "query",
            "name": "to_date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Only fetch orders until this date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched all orders of driver with specified status and in specified date range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                },
                "examples": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new order",
        "operationId": "post-reservation-orders",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request (Validation error occures on request body)"
          },
          "403": {
            "description": "Forbidden (Requesting intervals are full of capacity)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unset_zone",
                        "forbidden_area",
                        "duplicate_date_interval",
                        "pending_order"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict (Requesting to create more than allowed intervals per day)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "detail": "Given intervals are more than set in driver plan",
                      "code": "interval_excess"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create an order with its items",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date"
                    },
                    "interval_id": {
                      "type": "integer"
                    },
                    "area_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "examples": {
                "example": {
                  "value": [
                    {
                      "date": "2020-01-01",
                      "interval_id": 1,
                      "area_id": 1
                    },
                    {
                      "date": "2020-01-01",
                      "interval_id": 2,
                      "area_id": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "reservation"
        ]
      }
    },
    "/reservation/payment/initialize/": {
      "post": {
        "tags": [
          "reservation"
        ],
        "summary": "Initialize a payment",
        "description": "Call this endpoint to initialize an online payment for reservation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "order_id"
                ],
                "properties": {
                  "order_id": {
                    "type": "integer",
                    "description": "ID of the order that we want to pay for it",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully initiate an online payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "http_method",
                    "url"
                  ],
                  "properties": {
                    "http_method": {
                      "type": "string",
                      "enum": [
                        "GET",
                        "POST"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "The URL that user should be redirected to",
                      "example": "https://sep.shaparak.ir/MobilePG/MobilePayment"
                    },
                    "body": {
                      "type": "object",
                      "additionalProperties": true,
                      "description": "The content of body that PSP expects. This will only be used in POST methods",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "A validation error indicating failure in initiating the payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "already_paid",
                        "expired_order"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "A runtime error has occured, either from Miare's side or PSP's side.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "no_provider_available",
                        "no_profile"
                      ]
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tracking/problems/": {
      "get": {
        "summary": "Problems",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Problem"
                  }
                },
                "examples": {
                  "example": {
                    "value": [
                      {
                        "id": 1,
                        "title": "آدرس را نمی‌شناسم",
                        "category": {
                          "id": 1,
                          "title": "عدم امکان تکمیل سفر",
                          "auto_revoke_on_create": true
                        }
                      },
                      {
                        "id": 2,
                        "title": "موتورم خراب شده است یا بنزین ندارم",
                        "category": {
                          "id": 1,
                          "title": "عدم امکان تکمیل سفر",
                          "auto_revoke_on_create": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-tracking-problems",
        "description": "Returns unarchived problems exposed to Drivers"
      },
      "parameters": []
    },
    "/accounting/drivers/trip-salary/{trip_id}/": {
      "get": {
        "summary": "Trip Salary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "courses_salary": {
                      "type": "number"
                    },
                    "extra_salary_items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number"
                          },
                          "reason": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "courses_count": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "courses_salary": 10000,
                      "courses_count": 3,
                      "extra_salary_items": [
                        {
                          "amount": 5000,
                          "reason": "شرایط برفی"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "When driver doesn't own the trip or his plan is not reservable"
          }
        },
        "operationId": "get-accounting-trip-salary",
        "description": "Returns info about the salary of a trip for drivers",
        "tags": [
          "accounting"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "trip_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/trip-management/driver-api/refusings/": {
      "get": {
        "summary": "Today Refusings Count",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "count"
                  ]
                },
                "examples": {
                  "example": {
                    "value": {
                      "count": 2
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-tracking-drivers-refusings",
        "description": "Return number of refusing from driver which has happened today"
      },
      "parameters": []
    },
    "/area/driver-areas/": {
      "get": {
        "summary": "Driver Areas",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "FeatureCollection"
                      ],
                      "example": "FeatureCollection"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DriverArea"
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "type": "FeatureCollection",
                      "features": [
                        {
                          "type": "Feature",
                          "geometry": {
                            "type": "Polygon",
                            "coordinates": [
                              [
                                [
                                  51.400484319372595,
                                  35.77711998973699
                                ],
                                [
                                  51.402285798950174,
                                  35.77715689235952
                                ],
                                [
                                  51.409926283111645,
                                  35.77201786907895
                                ],
                                [
                                  51.39114434603266,
                                  35.774689473198926
                                ]
                              ]
                            ]
                          },
                          "properties": {
                            "id": 1,
                            "name": "شیخ بهایی",
                            "manual_assign_enabled": true
                          }
                        },
                        {
                          "type": "Feature",
                          "geometry": {
                            "type": "Polygon",
                            "coordinates": [
                              [
                                [
                                  51.37682978902819,
                                  35.790869849127894
                                ],
                                [
                                  51.365755603073445,
                                  35.786687126523816
                                ],
                                [
                                  51.36732868769171,
                                  35.78070592083067
                                ]
                              ]
                            ]
                          },
                          "properties": {
                            "id": 12,
                            "name": "سعادت آباد جدید",
                            "manual_assign_enabled": false
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-area-driver-areas"
      },
      "parameters": []
    },
    "/accounting/drivers/daily-kpi/": {
      "get": {
        "summary": "Daily KPI",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bonus_courses_count": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "long_courses_count": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "courses_count": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "round_trips_count": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "absences": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Absence"
                      }
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "example": "2020-01-15"
                    },
                    "absence_seconds": {
                      "type": "number",
                      "example": 5291.734134,
                      "minimum": 0
                    },
                    "trips": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TripInDailyKPI"
                      }
                    },
                    "course_bonuses": {
                      "type": "array",
                      "items": {}
                    },
                    "trips_count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "bonus_courses_count": 0,
                      "long_courses_count": 1,
                      "courses_count": 10,
                      "round_trips_count": 6,
                      "absences": [
                        {
                          "id": 12838542,
                          "start_datetime": "2020-01-15T16:01:48.265866+03:30",
                          "end_datetime": "2020-01-15T17:30:00+03:30",
                          "status": false,
                          "tag": 20,
                          "comment": ""
                        }
                      ],
                      "date": "2020-01-15",
                      "absence_seconds": 5291.734134,
                      "trips": [
                        {
                          "request_datetime": "2020-01-15T15:02:53.507091+03:30",
                          "assign_datetime": "2020-01-15T15:03:05.289311+03:30",
                          "id": 1726120,
                          "courses": [
                            {
                              "id": 2633380,
                              "end_datetime": "2020-01-15T15:28:27+03:30",
                              "radial_end_to_end_distance": 3.1678023226569194,
                              "is_long": true
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "تهیه غذا گل یاس",
                          "is_round_trip": false,
                          "end_datetime": "2020-01-15T15:28:27+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T14:39:25.449147+03:30",
                          "assign_datetime": "2020-01-15T14:39:29.256853+03:30",
                          "id": 1725971,
                          "courses": [
                            {
                              "id": 2633140,
                              "end_datetime": "2020-01-15T14:55:12+03:30",
                              "radial_end_to_end_distance": 0.554773538189989,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "اهورا",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T15:02:23+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T14:25:17.004720+03:30",
                          "assign_datetime": "2020-01-15T14:25:25.658206+03:30",
                          "id": 1725866,
                          "courses": [
                            {
                              "id": 2632978,
                              "end_datetime": "2020-01-15T14:36:04+03:30",
                              "radial_end_to_end_distance": 0.2553254029662656,
                              "is_long": false
                            },
                            {
                              "id": 2632979,
                              "end_datetime": "2020-01-15T14:32:19+03:30",
                              "radial_end_to_end_distance": 0.18872457058450023,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "اهورا",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T14:37:52+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T13:46:07.714467+03:30",
                          "assign_datetime": "2020-01-15T13:46:17.157006+03:30",
                          "id": 1725562,
                          "courses": [
                            {
                              "id": 2632496,
                              "end_datetime": "2020-01-15T14:19:28+03:30",
                              "radial_end_to_end_distance": 0.011249108275583031,
                              "is_long": false
                            },
                            {
                              "id": 2632494,
                              "end_datetime": "2020-01-15T14:19:14+03:30",
                              "radial_end_to_end_distance": 0.012657498618597367,
                              "is_long": false
                            },
                            {
                              "id": 2632455,
                              "end_datetime": "2020-01-15T14:19:06+03:30",
                              "radial_end_to_end_distance": 0.4748264050348156,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "اهورا",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T14:22:53+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T12:53:16.024924+03:30",
                          "assign_datetime": "2020-01-15T12:53:36.253022+03:30",
                          "id": 1725094,
                          "courses": [
                            {
                              "id": 2631605,
                              "end_datetime": "2020-01-15T13:12:26+03:30",
                              "radial_end_to_end_distance": 0.9553523969044245,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "شادی اندرزگو",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T13:20:00+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T12:03:03.267951+03:30",
                          "assign_datetime": "2020-01-15T12:03:26.474656+03:30",
                          "id": 1724727,
                          "courses": [
                            {
                              "id": 2631028,
                              "end_datetime": "2020-01-15T12:07:43+03:30",
                              "radial_end_to_end_distance": 0.01429344236475458,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "کترینگ پلو",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T12:23:17.427800+03:30"
                        },
                        {
                          "request_datetime": "2020-01-15T11:45:23.484003+03:30",
                          "assign_datetime": "2020-01-15T11:45:53.264385+03:30",
                          "id": 1724657,
                          "courses": [
                            {
                              "id": 2630921,
                              "end_datetime": "2020-01-15T12:03:11+03:30",
                              "radial_end_to_end_distance": 0.009783316341434355,
                              "is_long": false
                            }
                          ],
                          "course_bonuses": [],
                          "source_title": "ساندویچ ایرونی",
                          "is_round_trip": true,
                          "end_datetime": "2020-01-15T12:03:21+03:30"
                        }
                      ],
                      "course_bonuses": []
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-accounting-drivers-daily-kpi",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-01-15"
            },
            "in": "query",
            "name": "date",
            "required": true,
            "description": ""
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "header",
            "name": "ENTITY-ID",
            "description": "The ID of the driver in case that the request is from operation agent"
          }
        ],
        "description": "Returns detailed accounting report of a driver per date"
      }
    },
    "/re": {},
    "/reservation/capacities/": {
      "get": {
        "summary": "Get Capacities",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "area": {
                        "$ref": "#/components/schemas/Area"
                      },
                      "date": {
                        "type": "string",
                        "format": "date"
                      },
                      "interval_capacities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "interval": {
                              "$ref": "#/components/schemas/Interval"
                            },
                            "capacity": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "reserved": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": [
                      {
                        "date": "2020-01-01",
                        "area": {
                          "id": 1,
                          "name": "شیخ بهایی"
                        },
                        "interval_capacities": [
                          {
                            "interval": {
                              "id": 2,
                              "name": "ظهر",
                              "start_time": "11:30:00",
                              "end_time": "15:30:00"
                            },
                            "capacity": 2,
                            "reserved": true
                          },
                          {
                            "interval": {
                              "id": 3,
                              "name": "شب",
                              "start_time": "19:30:00",
                              "end_time": "23:30:00"
                            },
                            "capacity": 0,
                            "reserved": false
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-reservation-capacities",
        "description": "Returns capacity report for area-date-interval"
      }
    },
    "area/driver-areas/zones/": {
      "get": {
        "summary": "zones",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/DriverZone"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "is_active": {
                            "type": "boolean"
                          }
                        }
                      }
                    ]
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": 1,
                        "name": "مرکزی",
                        "explanation": "شامل مناطق یوسف آباد و شیخ بهایی",
                        "is_active": true
                      },
                      {
                        "id": 2,
                        "name": "شمالی",
                        "explanation": "شامل مناطق اندرزگو و الهیه",
                        "is_active": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-driver-areas-zones",
        "description": "Returns All zones and driver active zone"
      },
      "parameters": []
    },
    "/area/driver-areas/set-zone/": {
      "post": {
        "summary": "Set Zone",
        "operationId": "post-area-driver-areas-set-zone",
        "responses": {
          "200": {
            "description": "{\n    \"status\": \"ok\"\n}"
          },
          "400": {
            "description": "Bad Request, if zone_id is not included in request\n\n{\n    \"detail\": \"Invalid input.\",\n    \"code\": \"invalid\",\n    \"metadata\": {\n        \"field_name\": \"zone_id\",\n        \"required_data_type\": \"None\"\n    }\n}"
          },
          "404": {
            "description": "Not Found, if zone_id is not valid\n{\n    \"detail\": \"Not found.\",\n    \"code\": \"not_found\"\n}"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "zone_id": {
                    "type": "integer"
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "zone_id": [
                      "1"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "reservation"
        ]
      }
    },
    "/accounting/drivers/week_review/": {
      "get": {
        "summary": "Week Review Report",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "string"
                    },
                    "comission_items": {
                      "type": "string"
                    },
                    "current_week_balance": {
                      "type": "string"
                    },
                    "daily_kpi": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DailyKPI"
                      }
                    },
                    "debt_items": {
                      "type": "integer"
                    },
                    "due_from_last_week": {
                      "type": "integer"
                    },
                    "kpi_review": {
                      "type": "object"
                    },
                    "out_of_shift_comissions": {
                      "type": "integer",
                      "enum": [
                        0
                      ]
                    },
                    "out_of_shift_kilometers": {
                      "type": "integer",
                      "enum": [
                        0
                      ]
                    },
                    "plan": {
                      "$ref": "#/components/schemas/DriverPlan"
                    },
                    "punishment_items": {
                      "type": "array",
                      "items": {}
                    },
                    "referral_items": {
                      "type": "array",
                      "items": {}
                    },
                    "reward_items": {
                      "type": "array",
                      "items": {}
                    },
                    "shifts": {
                      "type": "array",
                      "maxItems": 0,
                      "items": {}
                    },
                    "total_comission": {
                      "type": "integer",
                      "enum": [
                        "0"
                      ]
                    },
                    "total_debt": {
                      "type": "integer"
                    },
                    "total_punishment": {
                      "type": "integer"
                    },
                    "total_referral": {
                      "type": "integer"
                    },
                    "total_reward": {
                      "type": "integer"
                    },
                    "": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "reward_items": [
                        {
                          "created_at": "2020-07-12T11:31:06.444472Z",
                          "type": {
                            "id": 31,
                            "name": "مسیر طولانی"
                          },
                          "id": 446342,
                          "reason": "درآمد مازاد مسیر دور آشپزخانه آذری",
                          "amount": 2000
                        }
                      ],
                      "debt_items": [],
                      "commission_items": [],
                      "total_punishment": 0,
                      "total_commission": 0,
                      "total_debt": 0,
                      "total_reward": 2000,
                      "total_referral": 0,
                      "due_from_last_week": -1594153,
                      "out_of_shift_kilometers": 0,
                      "balance": -1592153,
                      "plan": {
                        "name": "طرح بسیار موقتی",
                        "id": 146,
                        "assign_weight": 1,
                        "type": 3,
                        "intervals": [
                          {
                            "id": 13,
                            "name": "اینتروالی برای تست",
                            "start_time": "10:15:00",
                            "end_time": "23:30:00"
                          }
                        ],
                        "reservable": false,
                        "max_acceptable_absence_hours": 12,
                        "min_acceptable_courses_count": 85
                      },
                      "referral_items": [],
                      "kpi_review": {
                        "fix_salary": 0,
                        "courses_salary": 9000,
                        "balance_change": 9000,
                        "fix_reward": null,
                        "absence_punishments": [],
                        "plan_fix_reward": 0,
                        "fix_salary_applicable": false,
                        "reward_threshold": 0,
                        "dynamic_reward": null
                      },
                      "out_of_shift_commission": 0,
                      "daily_kpi": [
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-11",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 1,
                          "courses_count": 3,
                          "date": "2020-07-12",
                          "long_courses_count": 1,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-13",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-14",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-15",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-16",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        },
                        {
                          "trips_count": 0,
                          "courses_count": 0,
                          "date": "2020-07-17",
                          "long_courses_count": 0,
                          "absences": [],
                          "absence_seconds": 0,
                          "bonus_courses_count": 0,
                          "round_trips_count": 0
                        }
                      ],
                      "punishment_items": [],
                      "shifts": [],
                      "current_week_balance": -1592153
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-accounting-drivers-week_review",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date",
            "description": "",
            "required": true
          }
        ]
      }
    },
    "/reservation/orders/{order_id}/cancel/": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "order_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancel Order",
        "tags": [
          "reservation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "post-reservation-orders-order_id-cancel",
        "description": "Cancel a pending order"
      }
    },
    "/issues/{issue_id}/pick/": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "issue_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Issue Pick",
        "tags": [
          "delivery"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (The requester is not staff)"
          },
          "404": {
            "description": "Not Found (No issue found with the same id)"
          }
        },
        "operationId": "post-issues-issue_id-pick"
      }
    },
    "/notification/static-contents/{category_name}/": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "enum": [
              "reservation-tutorial",
              "..."
            ]
          },
          "name": "category_name",
          "in": "path",
          "required": true,
          "description": "The name of the category which user expects to see its contents"
        }
      ],
      "get": {
        "summary": "Get static contents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StaticContent"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/StaticContent"
                    }
                  ]
                },
                "examples": {
                  "obj-example": {
                    "value": {
                      "id": 1,
                      "name": "v1",
                      "file_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B1.JPG"
                    }
                  },
                  "list-example": {
                    "value": [
                      {
                        "id": 1,
                        "name": "pic 1",
                        "file_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B1.JPG"
                      },
                      {
                        "id": 3,
                        "name": "pic 2",
                        "file_url": "http://localhost:8000/media/%D8%B3%D9%BE%D9%87%D8%B2.JPG"
                      }
                    ]
                  },
                  "empty-list-example": {
                    "value": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (No content obj is created for the given obj category || category not found)"
          }
        },
        "operationId": "get-notification-static-contents-category_name",
        "tags": [
          "notifications"
        ]
      }
    },
    "/accounting/drivers/reservers/week-review/": {
      "get": {
        "summary": "reservers-week-review",
        "tags": [
          "accounting"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reward_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reward"
                      }
                    },
                    "total_reward": {
                      "type": "integer",
                      "description": "Signed"
                    },
                    "punishments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reward"
                      }
                    },
                    "total_punishment": {
                      "type": "integer",
                      "description": "Signed"
                    },
                    "referral_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Referral"
                      }
                    },
                    "total_referral": {
                      "type": "integer"
                    },
                    "debt_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Debt"
                      }
                    },
                    "total_debt": {
                      "type": "integer",
                      "maximum": 0,
                      "description": "Signed"
                    },
                    "daily_kpi": {
                      "type": "array",
                      "description": "The driver salary amount per each week day if the driver works at the date",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date"
                          },
                          "salary": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "review": {
                      "type": "object",
                      "properties": {
                        "online_duration": {
                          "type": "string"
                        },
                        "trips_count": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "courses_salary": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "on_trip_duration": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reward_items": [
                        {
                          "amount": 850,
                          "type": {
                            "id": 5,
                            "name": "بازگشت سفر"
                          },
                          "id": 269036,
                          "reason": "درآمد مازاد بازگشت سفر فودکورت لوکال‌هاست",
                          "created_at": "2019-09-20T19:03:50.690277Z"
                        }
                      ],
                      "balance": 11900,
                      "due_from_last_week": 0,
                      "punishment_items": [
                        {
                          "amount": 20000,
                          "type": {
                            "id": 4,
                            "name": "تیکت"
                          },
                          "id": 16464,
                          "reason": "امتناع از سفر آخر وقت تهیه غذای خیلی خوب",
                          "created_at": "2019-09-17T19:00:00Z"
                        }
                      ],
                      "review": {
                        "online_duration": "3 04:56:05.946319",
                        "trips_count": 72,
                        "courses_salary": 1095000,
                        "on_trip_duration": "16:08:38.316577"
                      },
                      "total_reward": 35500,
                      "total_punishment": -20000,
                      "referral_items": [],
                      "debt_items": [
                        {
                          "amount": 20000,
                          "debt_info": {
                            "id": 5589,
                            "name": "ذخیره صندوق",
                            "total_amount": "500000",
                            "total_installments": 25,
                            "payment_start_date": "2019-07-31",
                            "return_at_quit": true,
                            "type": {
                              "id": 36,
                              "name": "ذخیره صندوق"
                            }
                          },
                          "paid": 140000,
                          "date": "2019-09-18"
                        }
                      ],
                      "daily_kpi": [
                        {
                          "salary": 6800,
                          "date": "2019-09-14"
                        },
                        {
                          "salary": 5100,
                          "date": "2019-09-15"
                        },
                        {
                          "salary": 1700,
                          "date": "2019-09-16"
                        },
                        {
                          "salary": -18300,
                          "date": "2019-09-17"
                        },
                        {
                          "salary": 4250,
                          "date": "2019-09-18"
                        },
                        {
                          "salary": 4250,
                          "date": "2019-09-19"
                        },
                        {
                          "salary": 1086700,
                          "date": "2019-09-20"
                        }
                      ],
                      "total_debt": -20000,
                      "total_referral": 0
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-accounting-drivers-reservers-week-review",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-08-21"
            },
            "in": "query",
            "name": "date",
            "description": "The date of weekend which the weekly report is requested for. If requesting current week, the date should be equal to today date. ",
            "required": true
          }
        ]
      }
    }
  },
  "security": [
    {
      "auth": []
    }
  ]
}